======================================================================
Requirements
======================================================================


Windows version
---------------

Ice-E has been extensively tested with Windows XP.


C++ compiler
------------

The following C++ compilers are supported:

- Microsoft Visual C++ 2005 (both Professional and Express editions)

  Visual C++ 2005 Express is available for download from:

  http://msdn.microsoft.com/vstudio/express/visualc/

- Microsoft Visual C++ .NET 2003 SP1 (aka VC++ 7.1)

- Microsoft Visual C++ 6.0 SP5 with STLport 4.5 (or later)

  The Standard Template Library included with Visual C++ 6.0 is not
  supported. STLPort is included in the Ice third-party package
  for Visual C++ 6.0.


Slice-to-Embedded-C++ translator
--------------------------------

You will need the Slice-to-Embedded-C++ translator (slice2cppe) and
preprocessor (icecpp). You can download a binary distribution from the
ZeroC web site, or you can build the Slice-to-Embedded-C++ translator
yourself.

Binary and source distributions for the supported platforms are
available at

http://www.zeroc.com/download.html


STLport
-------

Ice-E requires STLport 4.5 or later for Visual C++ 6.0. You can
download STLport at the following location:

http://www.stlport.org/download.html

For STLport installation instructions, please refer to

http://www.stlport.org/doc/install.html

There is no need to compile STLport for use with Ice-E, since Ice-E does
not use iostream, locale nor complex support provided by STLport.

Users must configure Visual Studio to use STLport:

- In the Visual C++ 6.0 IDE, choose Tools->Options->Directories

- Select "Include files"

- Add the include directory for STLport first in the list. (Note that
  you must add the "include\stlport" directory, not just "include".)


Python
------

To run the automated test suite, you will need Python 2.2 or a newer
version. If you have no interest in running the test scripts, Python
is not required.

You can download a Python distribution for Windows from

http://www.python.org/download


======================================================================
Compilation and Testing
======================================================================

Building Ice
------------

Using your favorite Zip tool, unzip the Ice source archive anywhere
you like.

Open a command prompt and change the working directory to IceE-@ver@.
For example:

> cd C:\IceE-@ver@

Edit config\Make.rules.mak to establish your build configuration. The
comments in the file provide more information. In particular, you
must set CPP_COMPILER to the appropriate compiler.

Now you're ready to build Ice-E:

> nmake /f Makefile.mak


Running the Test Suite
----------------------

You can run the test suite if you compiled the tests and have
installed Python. Open a command prompt and change to the top-level
Ice-E directory. At the command prompt, execute:

python allTests.py

If everything worked out, you should see lots of "ok" messages. In
case of a failure, the tests abort with "failed".

If you want to try out any of the demos, make sure to update your PATH
environment variable to add the "bin" directory that contains the
Ice-E DLLs.


======================================================================
Installation
======================================================================

Simply run "nmake /f Makefile.mak install". This will install Ice-E in
the directory specified by the "prefix" variable in config\Make.rules.mak.

After installation, make sure to add the include directory to the
Visual C++ "Include files" and the lib directory to the "Library
files":

  * Visual C++ 6.0: Tools->Options->Directories

  * Visual C++ .NET 2003: Tools->Options->Projects->VC++ Directories

  * Visual C++ 2005: Tools->Options->Projects and Solutions->
                                                    VC++ Directories
