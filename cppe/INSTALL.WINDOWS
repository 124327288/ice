======================================================================
Requirements
======================================================================


Windows version
---------------

Ice-E has been extensively tested with Windows XP.

C++ compiler
------------

the following microsoft visual c++ compilers are supported:

- Visual C++ 6.0 SP5 with STLport 4.5 (or later)

- Visual C++ .NET 2003 (aka VC 7.1)

- Visual C++ 2005 (aka VC++ 8.0)

The STL (Standard Template Library) that is included with Visual C++ 
6.0 is not supported. You must use STLport with this compiler.

For Visual C++ .NET 2003 and Visual C++ 2005, you can use the included
STL library.


Slice-to-Embedded-C++ translator
--------------------------------

You will need the Slice-to-Embedded-C++ translator (slice2cppe) and
preprocessor (icecpp). You can download a binary distribution from the
ZeroC web site, or you can build the Slice-to-Embedded-C++ translator
yourself.

Binary and source distributions for the supported platforms are
available at

http://www.zeroc.com/download.html


STLport
-------

Ice-E requires STLport 4.5 or later for Visual C++ 6.0. You can download
STLport at the following location:

http://www.stlport.org/download.html

For STLport installation instructions, please refer to
http://www.stlport.org/doc/install.html. There is no need to compile 
STLport for use with Ice-E, since Ice-E does not require the iostream 
support provided by STLport.

Users must configure Visual Studio to use STLPort:

- In the Visual C++ 6.0 IDE, choose Tools->Options->Directories

- Select "Include files"

- Add the include directory for STLport first in the list. (Note that
  you must add the "include\stlport" directory, not just "include".)


Python
------

To run the automated test suite, you will need Python 2.2 or a newer
version. If you have no interest in running the test scripts, Python
is not required.

You can download a Python distribution for Windows from

http://www.python.org/download


======================================================================
Compilation and Testing
======================================================================

Using your favorite Zip tool, unzip the Ice-E archive anywhere you
like, then start the Microsoft Visual C++ IDE. You are now ready to
compile Ice-E.

Open the "all.dsw" workspace. If you are using Visual C++ .NET 2003 or
Visual C++ 2005, then the project files must first be converted from
Visual C++ 6.0 to the new solution and project file format.

Set your active project to "all" to compile everything including the
tests and demos. To set your active project with Visual C++ 6.0,
use Project->Set Active Project. For Visual C++ .NET 2003 or Visual 
C++ 2005, click on "all" in the class view, then use Project->Set as
StartUp Project.

Four build configurations are supported:

  Win32 Release
  Win32 Debug
  Win32 Release Static
  Win32 Debug Static

The first two create DLLs for the Ice-E run time, whereas the last two
generate only static libraries.

For Visual C++ 2005 you should make sure maximum number of parallel
builds setting is set to 1. Otherwise you may get failures which require
you run the compilation multiple times. This setting can be found in
Tools->Options->Projects and Solutions->Build and Run.

After selecting a build configuration, start the compilation using
Build->Build for Visual C++ 6.0, or Build->Build all for Visual C++
.NET 2003 or Visual C++ 2005.

If you built the tests you can run the test suite, provided that you
have installed Python. Open a command prompt and change to the top-
level Ice-E directory. At the command prompt, execute:

python allTests.py

If everything worked out, you should see lots of "ok" messages. In
case of a failure, the tests abort with "failed".

If you want to try out any of the demos, make sure to update your PATH
environment variable to add the "bin" directory that contains the
Ice-E DLLs.


======================================================================
Installation
======================================================================

No automatic installation support is provided: you need to copy the
contents of the bin, include, and lib directories to your preferred
location. The include directory contains all Ice-E include files, the
lib directory contains all Ice-E libraries, and the bin directory
contains all Ice-E DLLs.

After installation, make sure to add the include directory to the
Visual C++ "Include files" and the lib directory to the "Library
files":

  * Visual C++ 6.0: Tools->Options->Directories

  * Visual C++ .NET 2003: Tools->Options->Projects->VC++ Directories

  * Visual C++ 2005: Tools->Options->Projects and Solutions->
                                                    VC++ Directories
