======================================================================
Requirements
======================================================================


Operating System
----------------

Ice-E is expected to build and run properly on any recent Linux
distribution for x86 and x86_64. However, Ice-E is officially supported
only on:

 - Red Hat Enterprise Linux Advanced Server 4 Update 4 for x86 or
   x86_64 (RHEL 4.4)

 - Novell SuSE Linux Enterprise Server 10 for x86 or x86_64 (SLES 10)


C++ compiler
------------

Ice-E is expected to build properly with GCC 3.3 or later. However, only
the following compilers are officially supported:

 - GCC 3.4.6 on RHEL 4.4
 - GCC 4.1.x on SLES 10


Slice-to-Embedded-C++ translator
--------------------------------

You will need the Slice-to-Embedded-C++ translator (slice2cppe) and
preprocessor (icecpp). You can download a binary distribution from
the ZeroC web site, or you can build the Slice-to-Embedded-C++
translator yourself.

Binary and source distributions for the supported platforms are
available at

http://www.zeroc.com/download.html


Python
------

You will need Python to run the automated test suite. If you have no
interest in running the test scripts, Python is not required.


======================================================================
Compilation and Testing
======================================================================

Extract the Ice-E archive in any directory you like (for example, in
your home directory):

$ tar xvfz IceE-@ver@.tar.gz

Change the working directory to IceE-@ver@:

$ cd IceE-@ver@

Review the README file to determine whether you want to modify the
default set of features provided by the run time libraries. Next,
edit config/Make.rules to establish your build configuration. The
comments in the file provide more information. 

Now you're ready to build Ice-E:

$ make

This will build the Ice-E library, tests and examples.

After a successful build, you can run the test suite, provided that
you have installed Python:

$ make test

This is equivalent to:

$ python allTests.py

If everything worked out, you should see lots of "ok" messages. In
case of a failure, the tests abort with "failed".

If you want to try out any of the demos and you did not build Ice-E
statically, make sure to update your LD_LIBRARY_PATH environment
variable to add the "lib" directory:

$ export LD_LIBRARY_PATH=`pwd`/lib:$LD_LIBRARY_PATH


======================================================================
32 bit builds on x86_64
======================================================================

By default, builds on x86_64 are 64-bit. To perform a 32-bit build on
an x86_64 Linux system, set the environment variable LP64 to no, as
shown below:

  $ export LP64=no


======================================================================
Installation
======================================================================

Simply run "make install". This will install Ice-E in the directory
specified by the "prefix" variable in config/Make.rules.

After installation, make sure the <prefix>/lib directory is in your
LD_LIBRARY_PATH. When compiling Ice-E programs, you must also make
sure to pass the location of the <prefix>/include directory to the
compiler with the -I option, and the location of the <prefix>/lib
directory with the -L option.

On an x86_64 system, the libraries are installed in <prefix>/lib64
unless LP64 is set to no. No other changes are necessary.
