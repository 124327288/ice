======================================================================
Requirements
======================================================================


Operating System
----------------

A recent Linux distribution for x86 or x86-64.


C++ compiler
------------

- GCC 3.2, 3.3, 3.4, 4.0.1


Slice-to-Embedded-C++ translator
--------------------------------

You will need the Slice-to-Embedded-C++ translator (slice2cppe) and
preprocessor (icecpp). You can download a binary distribution from
the ZeroC web site, or you can build the Slice-to-Embedded-C++
translator yourself.

Binary and source distributions for the supported platforms are
available at

http://www.zeroc.com/download.html


Python
------

To run the automated test suite, you will need Python 2.2 or a newer
version. If you have no interest in running the test scripts, Python
is not required.


======================================================================
Compilation and Testing
======================================================================

Extract the Ice-E archive in any directory you like (for example, in
your home directory):

$ tar xvfz IceE-@ver@.tar.gz

Change the working directory to IceE-@ver@:

$ cd IceE-@ver@

Review the README file to determine whether you want to modify the
default set of features provided by the run time libraries. Next,
edit config/Make.rules to establish your build configuration. The
comments in the file provide more information. Pay particular
attention to the variables that define the locations of the third-
party libraries.

If you want to build Ice-E with the Intel C++ compiler, first set the
following environment variables:

$ export CC=icc
$ export CXX=icpc

Now you're ready to build Ice-E:

$ make

This will build the Ice-E library, tests and examples.

After a successful build, you can run the test suite, provided that
you have installed Python:

$ make test

This is equivalent to:

$ python allTests.py

If everything worked out, you should see lots of "ok" messages. In
case of a failure, the tests abort with "failed".

If you want to try out any of the demos, make sure to update your
LD_LIBRARY_PATH environment variable to add the "lib" directory:

$ export LD_LIBRARY_PATH=`pwd`/lib:$LD_LIBRARY_PATH


======================================================================
64 bit builds on x86-64
======================================================================

To build Ice-E in 64 bit mode, you need to do the following:

- Set the environment variable LP64 to yes, as shown below:

  $ export LP64=yes

- Build and test as described above (with gcc).


======================================================================
Installation
======================================================================

Simply run "make install". This will install Ice-E in the directory
specified by the "prefix" variable in config/Make.rules.

After installation, make sure the <prefix>/lib directory is in your
LD_LIBRARY_PATH. When compiling Ice-E programs, you must also make sure
to pass the location of the <prefix>/include directory to the compiler
with the -I option, and the location of the <prefix>/lib directory
with the -L option.

If LP64 is set to yes, the libraries are installed in <prefix>/lib64
and the programs are installed in <prefix>/bin64. No other changes are
necessary.
