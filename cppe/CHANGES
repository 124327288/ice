Changes since version 1.0.0
---------------------------

- Added the ability to specify other mappings for slice sequences other
  than std::vector. This is done through metadata in a similar way to
  which IceJ supports alternate sequence mappings. Please see the Ice 
  manual for more details.

- Fixed a bug in slice2cpp that caused one-shot constructors for
  classes to incorrectly initialize base classes for class hierarchies
  three or more levels deep.

- Fixed a bug in the Slice parser that caused problems if an
  included file contained white space in the file name.

- Fixed a deadlock during shutdown that could happen with
  bi-directional connections.

- Removed ice_default() method from proxies.

- Connection::close(false) (i.e., graceful connection shutdown) now
  waits until all outstanding requests have completed.

- Ice will now listen on all local interfaces if no -h parameter
  is present in the endpoint configuration and no default host has
  been set. It will also listen to all interfaces if the -h parameter
  is set to *. In such configurations the endpoints published
  in proxies will not contain the loopback interface (127.0.0.1)
  unless it is the only local interface present.

- slice2cppe now provides the --add-header option. It adds a #include
  directive for the specified header at the beginning of the generated
  source file. For example:

      slice2cppe --add-header=precompiled.h x.ice

  adds "#include <precompiled.h> to the beginning of x.cpp (before any
  other include directives).

  You can specify an optional guard, for example:

      slice2cppe --add-header=precompiled.h,__PRECOMPILED_H__ x.ice

  With this, the beginning of x.cpp contains:

      #ifndef __PRECOMPILED_H__
      #define __PRECOMPILED_H__
      #include <precompiled.h>
      #endif

  You can repeat the --add-header option to include several headers in
  the generated source.

- Ice::Communicator::createObjectAdapter() throws
  Ice::AlreadyRegisteredException if it is called with the name of an
  object adapter that already exists.

- GCC compiles now use -Os rather than -O3 for optimized builds.

- EVC++ release builds now use "Optimize Size".
