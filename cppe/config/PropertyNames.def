#!/usr/bin/env python
# **********************************************************************
#
# Copyright (c) 2003-2005 ZeroC, Inc. All rights reserved.
#
# This copy of Ice is licensed to you under the terms described in the
# ICE_LICENSE file included in this distribution.
#
# **********************************************************************

# This file defines the valid properties that are used by the various
# parts of Ice. It is used generate source code using the makeprops.py
# utility, so we do not need to redundantly maintain the same property
# definitions in several languages (and risk having them go out of
# sync).
#
# Syntax:
#
# Empty lines (lines containing only whitespace) are ignored.
#
# The # character introduces a comment that extends to the end of
# line.  Property names cannot contain a # character.
#
# The file is organized into labelled sections. The label for a
# section must be an identifier followed by a colon, such as
# "ice:". Section labels must appear on a line by themselves (possibly
# followed by a comment).  Leading and trailing whitespace is
# ignored. Each section must occur only once in a file. "validProps"
# is reserved and cannot be used as a section name.
#
# Each section contains a number of property names, one to a line.  A
# property name cannot contain the # character. Otherwise, a property
# name is taken to be any consecutive sequence of non-whitespace
# characters.  Leading and trailing whitespace is ignored, as is a
# trailing comment.
#

# The token "<any>" is a wildcard and matches any non-empty sequence
# of non-whitespace characters, excluding '.'.
#
# Examples:
#
# "Ice.Foo.<any>" allows all properties with that prefix, such as
# "Ice.Foo.Bar".
# 
# "Ice.Foo<any>" allows properties such as "Ice.Foo.Bar" and "Ice.FooBar".
#
# Property definitions are translated into each language by
# makeprops.py.  For example, consider the following definitions:
#
# Ice:
#	ChangeUser
#	Package.<any>
#
# IceBox:
#	LoadOrder
#
# If the source file is called Properties.defs, makeprops.py generates
# the following C++ header and source code for this:
#
# // Properties.h
#
# namespace IceInternal
# {
# 
# class Properties
# {
# public:
# 
#     static const char* const IceProps[];
#     static const char* const IceBoxProps[];
#
#     static const char* const* validProps[];
# };
# 
# }
#
# // Properties.cpp
#
# const char* const IceInternal::Properties::IceProps[] =
# {
#     "Ice.ChangeUser",
#     "Ice.Package.*",
#     0
# };
# 
# const char* const IceInternal::Properties::IceBoxProps[] =
# {
#     "IceBox.LoadOrder",
#     0
# };
#
# const char* const* IceInternal::Properties::validProps[] =
# {
#    IceProps,
#    IceBoxProps,
#    0
# };
#
# Note that the class name ("Properties" in this example) is generated
# from the file name, and the first component of the property name is
# generated from the section label.
#

Ice:
    ChangeUser
    Config
    Default.Host
    Default.Locator
    Default.Package
    Default.Protocol
    Default.Router
    Logger.Timestamp
    MessageSizeMax
    NullHandleAbort
    Override.ConnectTimeout
    Override.Timeout
    Package.<any>
    PrintAdapterReady
    PrintProcessId
    ProgramName
    RetryIntervals
    ServerId
    ServerIdleTime
    StdErr
    StdOut
    ThreadPerConnection.StackSize
    Trace.Location
    Trace.Network
    Trace.Protocol
    Trace.Retry
    Trace.Slicing
    Warn.Connections
    Warn.Dispatch
    Warn.Leaks
