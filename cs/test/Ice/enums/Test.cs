// **********************************************************************
//
// Copyright (c) 2003-2012 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5b
//
// <auto-generated>
//
// Generated from file `Test.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


using _System = global::System;
using _Microsoft = global::Microsoft;

#pragma warning disable 1591

namespace Test
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5b")]
    public abstract class ByteConst1
    {
        public const byte value = 10;
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5b")]
    public abstract class ShortConst1
    {
        public const short value = 20;
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5b")]
    public abstract class IntConst1
    {
        public const int value = 30;
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5b")]
    public abstract class LongConst1
    {
        public const long value = 40L;
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5b")]
    public abstract class ByteConst2
    {
        public const byte value = 126;
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5b")]
    public abstract class ShortConst2
    {
        public const short value = 32766;
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5b")]
    public abstract class IntConst2
    {
        public const int value = 2147483647;
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5b")]
    public abstract class LongConst2
    {
        public const long value = 2147483646L;
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5b")]
    public enum ByteEnum
    {
        benum1 = 0,
        benum2 = 1,
        benum3 = 10,
        benum4 = 11,
        benum5 = 20,
        benum6 = 21,
        benum7 = 30,
        benum8 = 31,
        benum9 = 40,
        benum10 = 41,
        benum11 = 126
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5b")]
    public sealed class ByteEnumHelper
    {
        public static void write(Ice.OutputStream outS__, Test.ByteEnum v__)
        {
            if((int)v__ < 0 || (int)v__ > 126)
            {
                throw new Ice.MarshalException("enumerator out of range");
            }
            outS__.writeEnum((int)v__, 126);
        }

        public static Test.ByteEnum read(Ice.InputStream inS__)
        {
            Test.ByteEnum v__;
            v__ = (Test.ByteEnum)inS__.readEnum(126);
            if((int)v__ < 0 || (int)v__ > 126)
            {
                throw new Ice.MarshalException("enumerator out of range");
            }
            return v__;
        }
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5b")]
    public enum ShortEnum
    {
        senum1 = 3,
        senum2 = 4,
        senum3 = 10,
        senum4 = 11,
        senum5 = 20,
        senum6 = 21,
        senum7 = 30,
        senum8 = 31,
        senum9 = 40,
        senum10 = 41,
        senum11 = 32766
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5b")]
    public sealed class ShortEnumHelper
    {
        public static void write(Ice.OutputStream outS__, Test.ShortEnum v__)
        {
            if((int)v__ < 3 || (int)v__ > 32766)
            {
                throw new Ice.MarshalException("enumerator out of range");
            }
            outS__.writeEnum((int)v__, 32766);
        }

        public static Test.ShortEnum read(Ice.InputStream inS__)
        {
            Test.ShortEnum v__;
            v__ = (Test.ShortEnum)inS__.readEnum(32766);
            if((int)v__ < 3 || (int)v__ > 32766)
            {
                throw new Ice.MarshalException("enumerator out of range");
            }
            return v__;
        }
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5b")]
    public enum IntEnum
    {
        ienum1 = 0,
        ienum2 = 1,
        ienum3 = 10,
        ienum4 = 11,
        ienum5 = 20,
        ienum6 = 21,
        ienum7 = 30,
        ienum8 = 31,
        ienum9 = 40,
        ienum10 = 41,
        ienum11 = 2147483647,
        ienum12 = 2147483646
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5b")]
    public sealed class IntEnumHelper
    {
        public static void write(Ice.OutputStream outS__, Test.IntEnum v__)
        {
            if((int)v__ < 0 || (int)v__ > 2147483647)
            {
                throw new Ice.MarshalException("enumerator out of range");
            }
            outS__.writeEnum((int)v__, 2147483647);
        }

        public static Test.IntEnum read(Ice.InputStream inS__)
        {
            Test.IntEnum v__;
            v__ = (Test.IntEnum)inS__.readEnum(2147483647);
            if((int)v__ < 0 || (int)v__ > 2147483647)
            {
                throw new Ice.MarshalException("enumerator out of range");
            }
            return v__;
        }
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5b")]
    public enum SimpleEnum
    {
        red,
        green,
        blue
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5b")]
    public sealed class SimpleEnumHelper
    {
        public static void write(Ice.OutputStream outS__, Test.SimpleEnum v__)
        {
            if((int)v__ < 0 || (int)v__ > 2)
            {
                throw new Ice.MarshalException("enumerator out of range");
            }
            outS__.writeEnum((int)v__, 2);
        }

        public static Test.SimpleEnum read(Ice.InputStream inS__)
        {
            Test.SimpleEnum v__;
            v__ = (Test.SimpleEnum)inS__.readEnum(2);
            if((int)v__ < 0 || (int)v__ > 2)
            {
                throw new Ice.MarshalException("enumerator out of range");
            }
            return v__;
        }
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5b")]
    public sealed class TestIntfHelper
    {
        public TestIntfHelper(Ice.InputStream inS__)
        {
            _in = inS__;
            _pp = new IceInternal.ParamPatcher<Test.TestIntf>("::Test::TestIntf");
        }

        public static void write(Ice.OutputStream outS__, TestIntf v__)
        {
            outS__.writeObject(v__);
        }

        public void read()
        {
            _in.readObject(_pp);
        }

        public Test.TestIntf value
        {
            get
            {
                return (Test.TestIntf)_pp.value;
            }
        }

        private Ice.InputStream _in;
        private IceInternal.ParamPatcher<Test.TestIntf> _pp;
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial interface TestIntf : Ice.Object, TestIntfOperations_, TestIntfOperationsNC_
    {
    }
}

namespace Test
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5b")]
    public delegate void Callback_TestIntf_opByte(Test.ByteEnum ret__, Test.ByteEnum b2);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5b")]
    public delegate void Callback_TestIntf_opShort(Test.ShortEnum ret__, Test.ShortEnum s2);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5b")]
    public delegate void Callback_TestIntf_opInt(Test.IntEnum ret__, Test.IntEnum i2);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5b")]
    public delegate void Callback_TestIntf_opSimple(Test.SimpleEnum ret__, Test.SimpleEnum s2);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5b")]
    public delegate void Callback_TestIntf_shutdown();
}

namespace Test
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5b")]
    public interface TestIntfPrx : Ice.ObjectPrx
    {
        Test.ByteEnum opByte(Test.ByteEnum b1, out Test.ByteEnum b2);
        Test.ByteEnum opByte(Test.ByteEnum b1, out Test.ByteEnum b2, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Test.Callback_TestIntf_opByte> begin_opByte(Test.ByteEnum b1);
        Ice.AsyncResult<Test.Callback_TestIntf_opByte> begin_opByte(Test.ByteEnum b1, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_opByte(Test.ByteEnum b1, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_opByte(Test.ByteEnum b1, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        Test.ByteEnum end_opByte(out Test.ByteEnum b2, Ice.AsyncResult r__);

        Test.ShortEnum opShort(Test.ShortEnum s1, out Test.ShortEnum s2);
        Test.ShortEnum opShort(Test.ShortEnum s1, out Test.ShortEnum s2, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Test.Callback_TestIntf_opShort> begin_opShort(Test.ShortEnum s1);
        Ice.AsyncResult<Test.Callback_TestIntf_opShort> begin_opShort(Test.ShortEnum s1, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_opShort(Test.ShortEnum s1, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_opShort(Test.ShortEnum s1, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        Test.ShortEnum end_opShort(out Test.ShortEnum s2, Ice.AsyncResult r__);

        Test.IntEnum opInt(Test.IntEnum i1, out Test.IntEnum i2);
        Test.IntEnum opInt(Test.IntEnum i1, out Test.IntEnum i2, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Test.Callback_TestIntf_opInt> begin_opInt(Test.IntEnum i1);
        Ice.AsyncResult<Test.Callback_TestIntf_opInt> begin_opInt(Test.IntEnum i1, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_opInt(Test.IntEnum i1, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_opInt(Test.IntEnum i1, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        Test.IntEnum end_opInt(out Test.IntEnum i2, Ice.AsyncResult r__);

        Test.SimpleEnum opSimple(Test.SimpleEnum s1, out Test.SimpleEnum s2);
        Test.SimpleEnum opSimple(Test.SimpleEnum s1, out Test.SimpleEnum s2, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Test.Callback_TestIntf_opSimple> begin_opSimple(Test.SimpleEnum s1);
        Ice.AsyncResult<Test.Callback_TestIntf_opSimple> begin_opSimple(Test.SimpleEnum s1, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_opSimple(Test.SimpleEnum s1, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_opSimple(Test.SimpleEnum s1, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        Test.SimpleEnum end_opSimple(out Test.SimpleEnum s2, Ice.AsyncResult r__);

        void shutdown();
        void shutdown(_System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<Test.Callback_TestIntf_shutdown> begin_shutdown();
        Ice.AsyncResult<Test.Callback_TestIntf_shutdown> begin_shutdown(_System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_shutdown(Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_shutdown(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        void end_shutdown(Ice.AsyncResult r__);
    }
}

namespace Test
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5b")]
    public interface TestIntfOperations_
    {
        Test.ByteEnum opByte(Test.ByteEnum b1, out Test.ByteEnum b2, Ice.Current current__);

        Test.ShortEnum opShort(Test.ShortEnum s1, out Test.ShortEnum s2, Ice.Current current__);

        Test.IntEnum opInt(Test.IntEnum i1, out Test.IntEnum i2, Ice.Current current__);

        Test.SimpleEnum opSimple(Test.SimpleEnum s1, out Test.SimpleEnum s2, Ice.Current current__);

        void shutdown(Ice.Current current__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5b")]
    public interface TestIntfOperationsNC_
    {
        Test.ByteEnum opByte(Test.ByteEnum b1, out Test.ByteEnum b2);

        Test.ShortEnum opShort(Test.ShortEnum s1, out Test.ShortEnum s2);

        Test.IntEnum opInt(Test.IntEnum i1, out Test.IntEnum i2);

        Test.SimpleEnum opSimple(Test.SimpleEnum s1, out Test.SimpleEnum s2);

        void shutdown();
    }
}

namespace Test
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5b")]
    public sealed class TestIntfPrxHelper : Ice.ObjectPrxHelperBase, TestIntfPrx
    {
        #region Synchronous operations

        public Test.ByteEnum opByte(Test.ByteEnum b1, out Test.ByteEnum b2)
        {
            return opByte(b1, out b2, null, false);
        }

        public Test.ByteEnum opByte(Test.ByteEnum b1, out Test.ByteEnum b2, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return opByte(b1, out b2, context__, true);
        }

        private Test.ByteEnum opByte(Test.ByteEnum b1, out Test.ByteEnum b2, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __opByte_name, context__);
            int cnt__ = 0;
            try
            {
                while(true)
                {
                    Ice.ObjectDel_ delBase__ = null;
                    try
                    {
                        checkTwowayOnly__(__opByte_name);
                        delBase__ = getDelegate__(false);
                        TestIntfDel_ del__ = (TestIntfDel_)delBase__;
                        return del__.opByte(b1, out b2, context__, observer__);
                    }
                    catch(IceInternal.LocalExceptionWrapper ex__)
                    {
                        handleExceptionWrapper__(delBase__, ex__, observer__);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        handleException__(delBase__, ex__, true, ref cnt__, observer__);
                    }
                }
            }
            finally
            {
                if(observer__ != null)
                {
                    observer__.detach();
                }
            }
        }

        public Test.IntEnum opInt(Test.IntEnum i1, out Test.IntEnum i2)
        {
            return opInt(i1, out i2, null, false);
        }

        public Test.IntEnum opInt(Test.IntEnum i1, out Test.IntEnum i2, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return opInt(i1, out i2, context__, true);
        }

        private Test.IntEnum opInt(Test.IntEnum i1, out Test.IntEnum i2, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __opInt_name, context__);
            int cnt__ = 0;
            try
            {
                while(true)
                {
                    Ice.ObjectDel_ delBase__ = null;
                    try
                    {
                        checkTwowayOnly__(__opInt_name);
                        delBase__ = getDelegate__(false);
                        TestIntfDel_ del__ = (TestIntfDel_)delBase__;
                        return del__.opInt(i1, out i2, context__, observer__);
                    }
                    catch(IceInternal.LocalExceptionWrapper ex__)
                    {
                        handleExceptionWrapper__(delBase__, ex__, observer__);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        handleException__(delBase__, ex__, true, ref cnt__, observer__);
                    }
                }
            }
            finally
            {
                if(observer__ != null)
                {
                    observer__.detach();
                }
            }
        }

        public Test.ShortEnum opShort(Test.ShortEnum s1, out Test.ShortEnum s2)
        {
            return opShort(s1, out s2, null, false);
        }

        public Test.ShortEnum opShort(Test.ShortEnum s1, out Test.ShortEnum s2, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return opShort(s1, out s2, context__, true);
        }

        private Test.ShortEnum opShort(Test.ShortEnum s1, out Test.ShortEnum s2, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __opShort_name, context__);
            int cnt__ = 0;
            try
            {
                while(true)
                {
                    Ice.ObjectDel_ delBase__ = null;
                    try
                    {
                        checkTwowayOnly__(__opShort_name);
                        delBase__ = getDelegate__(false);
                        TestIntfDel_ del__ = (TestIntfDel_)delBase__;
                        return del__.opShort(s1, out s2, context__, observer__);
                    }
                    catch(IceInternal.LocalExceptionWrapper ex__)
                    {
                        handleExceptionWrapper__(delBase__, ex__, observer__);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        handleException__(delBase__, ex__, true, ref cnt__, observer__);
                    }
                }
            }
            finally
            {
                if(observer__ != null)
                {
                    observer__.detach();
                }
            }
        }

        public Test.SimpleEnum opSimple(Test.SimpleEnum s1, out Test.SimpleEnum s2)
        {
            return opSimple(s1, out s2, null, false);
        }

        public Test.SimpleEnum opSimple(Test.SimpleEnum s1, out Test.SimpleEnum s2, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return opSimple(s1, out s2, context__, true);
        }

        private Test.SimpleEnum opSimple(Test.SimpleEnum s1, out Test.SimpleEnum s2, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __opSimple_name, context__);
            int cnt__ = 0;
            try
            {
                while(true)
                {
                    Ice.ObjectDel_ delBase__ = null;
                    try
                    {
                        checkTwowayOnly__(__opSimple_name);
                        delBase__ = getDelegate__(false);
                        TestIntfDel_ del__ = (TestIntfDel_)delBase__;
                        return del__.opSimple(s1, out s2, context__, observer__);
                    }
                    catch(IceInternal.LocalExceptionWrapper ex__)
                    {
                        handleExceptionWrapper__(delBase__, ex__, observer__);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        handleException__(delBase__, ex__, true, ref cnt__, observer__);
                    }
                }
            }
            finally
            {
                if(observer__ != null)
                {
                    observer__.detach();
                }
            }
        }

        public void shutdown()
        {
            shutdown(null, false);
        }

        public void shutdown(_System.Collections.Generic.Dictionary<string, string> context__)
        {
            shutdown(context__, true);
        }

        private void shutdown(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            Ice.Instrumentation.InvocationObserver observer__ = IceInternal.ObserverHelper.get(this, __shutdown_name, context__);
            int cnt__ = 0;
            try
            {
                while(true)
                {
                    Ice.ObjectDel_ delBase__ = null;
                    try
                    {
                        delBase__ = getDelegate__(false);
                        TestIntfDel_ del__ = (TestIntfDel_)delBase__;
                        del__.shutdown(context__, observer__);
                        return;
                    }
                    catch(IceInternal.LocalExceptionWrapper ex__)
                    {
                        handleExceptionWrapper__(delBase__, ex__, observer__);
                    }
                    catch(Ice.LocalException ex__)
                    {
                        handleException__(delBase__, ex__, true, ref cnt__, observer__);
                    }
                }
            }
            finally
            {
                if(observer__ != null)
                {
                    observer__.detach();
                }
            }
        }

        #endregion

        #region Asynchronous operations

        public Ice.AsyncResult<Test.Callback_TestIntf_opByte> begin_opByte(Test.ByteEnum b1)
        {
            return begin_opByte(b1, null, false, null, null);
        }

        public Ice.AsyncResult<Test.Callback_TestIntf_opByte> begin_opByte(Test.ByteEnum b1, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_opByte(b1, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_opByte(Test.ByteEnum b1, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_opByte(b1, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_opByte(Test.ByteEnum b1, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_opByte(b1, ctx__, true, cb__, cookie__);
        }

        private const string __opByte_name = "opByte";

        public Test.ByteEnum end_opByte(out Test.ByteEnum b2, Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
            IceInternal.OutgoingAsync.check__(outAsync__, this, __opByte_name);
            bool ok__ = outAsync__.wait__();
            try
            {
                if(!ok__)
                {
                    try
                    {
                        outAsync__.throwUserException__();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                Test.ByteEnum ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                b2 = (Test.ByteEnum)is__.readEnum(126);
                ret__ = (Test.ByteEnum)is__.readEnum(126);
                outAsync__.endReadParams__();
                return ret__;
            }
            catch(Ice.LocalException ex)
            {
                Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                if(obsv__ != null)
                {
                    obsv__.failed(ex.ice_name());
                }
                throw ex;
            }
        }

        private Ice.AsyncResult<Test.Callback_TestIntf_opByte> begin_opByte(Test.ByteEnum b1, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__opByte_name);
            IceInternal.TwowayOutgoingAsync<Test.Callback_TestIntf_opByte> result__ =  new IceInternal.TwowayOutgoingAsync<Test.Callback_TestIntf_opByte>(this, __opByte_name, opByte_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__opByte_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                os__.writeEnum((int)b1, 126);
                result__.endWriteParams__();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void opByte_completed__(Ice.AsyncResult r__, Test.Callback_TestIntf_opByte cb__, Ice.ExceptionCallback excb__)
        {
            Test.ByteEnum b2;
            Test.ByteEnum ret__;
            try
            {
                ret__ = end_opByte(out b2, r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__, b2);
            }
        }

        public Ice.AsyncResult<Test.Callback_TestIntf_opInt> begin_opInt(Test.IntEnum i1)
        {
            return begin_opInt(i1, null, false, null, null);
        }

        public Ice.AsyncResult<Test.Callback_TestIntf_opInt> begin_opInt(Test.IntEnum i1, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_opInt(i1, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_opInt(Test.IntEnum i1, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_opInt(i1, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_opInt(Test.IntEnum i1, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_opInt(i1, ctx__, true, cb__, cookie__);
        }

        private const string __opInt_name = "opInt";

        public Test.IntEnum end_opInt(out Test.IntEnum i2, Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
            IceInternal.OutgoingAsync.check__(outAsync__, this, __opInt_name);
            bool ok__ = outAsync__.wait__();
            try
            {
                if(!ok__)
                {
                    try
                    {
                        outAsync__.throwUserException__();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                Test.IntEnum ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                i2 = (Test.IntEnum)is__.readEnum(2147483647);
                ret__ = (Test.IntEnum)is__.readEnum(2147483647);
                outAsync__.endReadParams__();
                return ret__;
            }
            catch(Ice.LocalException ex)
            {
                Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                if(obsv__ != null)
                {
                    obsv__.failed(ex.ice_name());
                }
                throw ex;
            }
        }

        private Ice.AsyncResult<Test.Callback_TestIntf_opInt> begin_opInt(Test.IntEnum i1, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__opInt_name);
            IceInternal.TwowayOutgoingAsync<Test.Callback_TestIntf_opInt> result__ =  new IceInternal.TwowayOutgoingAsync<Test.Callback_TestIntf_opInt>(this, __opInt_name, opInt_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__opInt_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                os__.writeEnum((int)i1, 2147483647);
                result__.endWriteParams__();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void opInt_completed__(Ice.AsyncResult r__, Test.Callback_TestIntf_opInt cb__, Ice.ExceptionCallback excb__)
        {
            Test.IntEnum i2;
            Test.IntEnum ret__;
            try
            {
                ret__ = end_opInt(out i2, r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__, i2);
            }
        }

        public Ice.AsyncResult<Test.Callback_TestIntf_opShort> begin_opShort(Test.ShortEnum s1)
        {
            return begin_opShort(s1, null, false, null, null);
        }

        public Ice.AsyncResult<Test.Callback_TestIntf_opShort> begin_opShort(Test.ShortEnum s1, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_opShort(s1, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_opShort(Test.ShortEnum s1, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_opShort(s1, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_opShort(Test.ShortEnum s1, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_opShort(s1, ctx__, true, cb__, cookie__);
        }

        private const string __opShort_name = "opShort";

        public Test.ShortEnum end_opShort(out Test.ShortEnum s2, Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
            IceInternal.OutgoingAsync.check__(outAsync__, this, __opShort_name);
            bool ok__ = outAsync__.wait__();
            try
            {
                if(!ok__)
                {
                    try
                    {
                        outAsync__.throwUserException__();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                Test.ShortEnum ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                s2 = (Test.ShortEnum)is__.readEnum(32766);
                ret__ = (Test.ShortEnum)is__.readEnum(32766);
                outAsync__.endReadParams__();
                return ret__;
            }
            catch(Ice.LocalException ex)
            {
                Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                if(obsv__ != null)
                {
                    obsv__.failed(ex.ice_name());
                }
                throw ex;
            }
        }

        private Ice.AsyncResult<Test.Callback_TestIntf_opShort> begin_opShort(Test.ShortEnum s1, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__opShort_name);
            IceInternal.TwowayOutgoingAsync<Test.Callback_TestIntf_opShort> result__ =  new IceInternal.TwowayOutgoingAsync<Test.Callback_TestIntf_opShort>(this, __opShort_name, opShort_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__opShort_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                os__.writeEnum((int)s1, 32766);
                result__.endWriteParams__();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void opShort_completed__(Ice.AsyncResult r__, Test.Callback_TestIntf_opShort cb__, Ice.ExceptionCallback excb__)
        {
            Test.ShortEnum s2;
            Test.ShortEnum ret__;
            try
            {
                ret__ = end_opShort(out s2, r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__, s2);
            }
        }

        public Ice.AsyncResult<Test.Callback_TestIntf_opSimple> begin_opSimple(Test.SimpleEnum s1)
        {
            return begin_opSimple(s1, null, false, null, null);
        }

        public Ice.AsyncResult<Test.Callback_TestIntf_opSimple> begin_opSimple(Test.SimpleEnum s1, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_opSimple(s1, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_opSimple(Test.SimpleEnum s1, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_opSimple(s1, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_opSimple(Test.SimpleEnum s1, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_opSimple(s1, ctx__, true, cb__, cookie__);
        }

        private const string __opSimple_name = "opSimple";

        public Test.SimpleEnum end_opSimple(out Test.SimpleEnum s2, Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
            IceInternal.OutgoingAsync.check__(outAsync__, this, __opSimple_name);
            bool ok__ = outAsync__.wait__();
            try
            {
                if(!ok__)
                {
                    try
                    {
                        outAsync__.throwUserException__();
                    }
                    catch(Ice.UserException ex__)
                    {
                        throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                    }
                }
                Test.SimpleEnum ret__;
                IceInternal.BasicStream is__ = outAsync__.startReadParams__();
                s2 = (Test.SimpleEnum)is__.readEnum(2);
                ret__ = (Test.SimpleEnum)is__.readEnum(2);
                outAsync__.endReadParams__();
                return ret__;
            }
            catch(Ice.LocalException ex)
            {
                Ice.Instrumentation.InvocationObserver obsv__ = outAsync__.getObserver__();
                if(obsv__ != null)
                {
                    obsv__.failed(ex.ice_name());
                }
                throw ex;
            }
        }

        private Ice.AsyncResult<Test.Callback_TestIntf_opSimple> begin_opSimple(Test.SimpleEnum s1, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__opSimple_name);
            IceInternal.TwowayOutgoingAsync<Test.Callback_TestIntf_opSimple> result__ =  new IceInternal.TwowayOutgoingAsync<Test.Callback_TestIntf_opSimple>(this, __opSimple_name, opSimple_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__opSimple_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.startWriteParams__(Ice.FormatType.DefaultFormat);
                os__.writeEnum((int)s1, 2);
                result__.endWriteParams__();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void opSimple_completed__(Ice.AsyncResult r__, Test.Callback_TestIntf_opSimple cb__, Ice.ExceptionCallback excb__)
        {
            Test.SimpleEnum s2;
            Test.SimpleEnum ret__;
            try
            {
                ret__ = end_opSimple(out s2, r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__, s2);
            }
        }

        public Ice.AsyncResult<Test.Callback_TestIntf_shutdown> begin_shutdown()
        {
            return begin_shutdown(null, false, null, null);
        }

        public Ice.AsyncResult<Test.Callback_TestIntf_shutdown> begin_shutdown(_System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_shutdown(ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_shutdown(Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_shutdown(null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_shutdown(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_shutdown(ctx__, true, cb__, cookie__);
        }

        private const string __shutdown_name = "shutdown";

        public void end_shutdown(Ice.AsyncResult r__)
        {
            end__(r__, __shutdown_name);
        }

        private Ice.AsyncResult<Test.Callback_TestIntf_shutdown> begin_shutdown(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            IceInternal.OnewayOutgoingAsync<Test.Callback_TestIntf_shutdown> result__ = new IceInternal.OnewayOutgoingAsync<Test.Callback_TestIntf_shutdown>(this, __shutdown_name, shutdown_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__shutdown_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                result__.writeEmptyParams__();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void shutdown_completed__(Test.Callback_TestIntf_shutdown cb__)
        {
            if(cb__ != null)
            {
                cb__();
            }
        }

        #endregion

        #region Checked and unchecked cast operations

        public static TestIntfPrx checkedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            TestIntfPrx r = b as TestIntfPrx;
            if((r == null) && b.ice_isA(ice_staticId()))
            {
                TestIntfPrxHelper h = new TestIntfPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static TestIntfPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            TestIntfPrx r = b as TestIntfPrx;
            if((r == null) && b.ice_isA(ice_staticId(), ctx))
            {
                TestIntfPrxHelper h = new TestIntfPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static TestIntfPrx checkedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId()))
                {
                    TestIntfPrxHelper h = new TestIntfPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static TestIntfPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId(), ctx))
                {
                    TestIntfPrxHelper h = new TestIntfPrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static TestIntfPrx uncheckedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            TestIntfPrx r = b as TestIntfPrx;
            if(r == null)
            {
                TestIntfPrxHelper h = new TestIntfPrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static TestIntfPrx uncheckedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            TestIntfPrxHelper h = new TestIntfPrxHelper();
            h.copyFrom__(bb);
            return h;
        }

        public static readonly string[] ids__ =
        {
            "::Ice::Object",
            "::Test::TestIntf"
        };

        public static string ice_staticId()
        {
            return ids__[1];
        }

        #endregion

        #region Marshaling support

        protected override Ice.ObjectDelM_ createDelegateM__()
        {
            return new TestIntfDelM_();
        }

        protected override Ice.ObjectDelD_ createDelegateD__()
        {
            return new TestIntfDelD_();
        }

        public static void write__(IceInternal.BasicStream os__, TestIntfPrx v__)
        {
            os__.writeProxy(v__);
        }

        public static TestIntfPrx read__(IceInternal.BasicStream is__)
        {
            Ice.ObjectPrx proxy = is__.readProxy();
            if(proxy != null)
            {
                TestIntfPrxHelper result = new TestIntfPrxHelper();
                result.copyFrom__(proxy);
                return result;
            }
            return null;
        }

        public static void write(Ice.OutputStream outS__, TestIntfPrx v__)
        {
            outS__.writeProxy(v__);
        }

        public static TestIntfPrx read(Ice.InputStream inS__)
        {
            Ice.ObjectPrx proxy = inS__.readProxy();
            if(proxy != null)
            {
                TestIntfPrxHelper result = new TestIntfPrxHelper();
                result.copyFrom__(proxy);
                return result;
            }
            return null;
        }

        #endregion
    }
}

namespace Test
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5b")]
    public interface TestIntfDel_ : Ice.ObjectDel_
    {
        Test.ByteEnum opByte(Test.ByteEnum b1, out Test.ByteEnum b2, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

        Test.ShortEnum opShort(Test.ShortEnum s1, out Test.ShortEnum s2, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

        Test.IntEnum opInt(Test.IntEnum i1, out Test.IntEnum i2, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

        Test.SimpleEnum opSimple(Test.SimpleEnum s1, out Test.SimpleEnum s2, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);

        void shutdown(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__);
    }
}

namespace Test
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5b")]
    public sealed class TestIntfDelM_ : Ice.ObjectDelM_, TestIntfDel_
    {
        public Test.ByteEnum opByte(Test.ByteEnum b1, out Test.ByteEnum b2, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("opByte", Ice.OperationMode.Normal, context__, observer__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                    os__.writeEnum((int)b1, 126);
                    og__.endWriteParams();
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                try
                {
                    if(!ok__)
                    {
                        try
                        {
                            og__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    IceInternal.BasicStream is__ = og__.startReadParams();
                    Test.ByteEnum ret__;
                    b2 = (Test.ByteEnum)is__.readEnum(126);
                    ret__ = (Test.ByteEnum)is__.readEnum(126);
                    og__.endReadParams();
                    return ret__;
                }
                catch(Ice.LocalException ex__)
                {
                    throw new IceInternal.LocalExceptionWrapper(ex__, false);
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public Test.IntEnum opInt(Test.IntEnum i1, out Test.IntEnum i2, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("opInt", Ice.OperationMode.Normal, context__, observer__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                    os__.writeEnum((int)i1, 2147483647);
                    og__.endWriteParams();
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                try
                {
                    if(!ok__)
                    {
                        try
                        {
                            og__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    IceInternal.BasicStream is__ = og__.startReadParams();
                    Test.IntEnum ret__;
                    i2 = (Test.IntEnum)is__.readEnum(2147483647);
                    ret__ = (Test.IntEnum)is__.readEnum(2147483647);
                    og__.endReadParams();
                    return ret__;
                }
                catch(Ice.LocalException ex__)
                {
                    throw new IceInternal.LocalExceptionWrapper(ex__, false);
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public Test.ShortEnum opShort(Test.ShortEnum s1, out Test.ShortEnum s2, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("opShort", Ice.OperationMode.Normal, context__, observer__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                    os__.writeEnum((int)s1, 32766);
                    og__.endWriteParams();
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                try
                {
                    if(!ok__)
                    {
                        try
                        {
                            og__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    IceInternal.BasicStream is__ = og__.startReadParams();
                    Test.ShortEnum ret__;
                    s2 = (Test.ShortEnum)is__.readEnum(32766);
                    ret__ = (Test.ShortEnum)is__.readEnum(32766);
                    og__.endReadParams();
                    return ret__;
                }
                catch(Ice.LocalException ex__)
                {
                    throw new IceInternal.LocalExceptionWrapper(ex__, false);
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public Test.SimpleEnum opSimple(Test.SimpleEnum s1, out Test.SimpleEnum s2, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("opSimple", Ice.OperationMode.Normal, context__, observer__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.startWriteParams(Ice.FormatType.DefaultFormat);
                    os__.writeEnum((int)s1, 2);
                    og__.endWriteParams();
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                try
                {
                    if(!ok__)
                    {
                        try
                        {
                            og__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    IceInternal.BasicStream is__ = og__.startReadParams();
                    Test.SimpleEnum ret__;
                    s2 = (Test.SimpleEnum)is__.readEnum(2);
                    ret__ = (Test.SimpleEnum)is__.readEnum(2);
                    og__.endReadParams();
                    return ret__;
                }
                catch(Ice.LocalException ex__)
                {
                    throw new IceInternal.LocalExceptionWrapper(ex__, false);
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public void shutdown(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("shutdown", Ice.OperationMode.Normal, context__, observer__);
            try
            {
                og__.writeEmptyParams();
                bool ok__ = og__.invoke();
                if(og__.hasResponse())
                {
                    try
                    {
                        if(!ok__)
                        {
                            try
                            {
                                og__.throwUserException();
                            }
                            catch(Ice.UserException ex__)
                            {
                                throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                            }
                        }
                        og__.readEmptyParams();
                    }
                    catch(Ice.LocalException ex__)
                    {
                        throw new IceInternal.LocalExceptionWrapper(ex__, false);
                    }
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }
    }
}

namespace Test
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5b")]
    public sealed class TestIntfDelD_ : Ice.ObjectDelD_, TestIntfDel_
    {
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public Test.ByteEnum opByte(Test.ByteEnum b1, out Test.ByteEnum b2, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "opByte", Ice.OperationMode.Normal, context__);
            Test.ByteEnum b2Holder__ = Test.ByteEnum.benum1;
            Test.ByteEnum result__ = Test.ByteEnum.benum1;
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                TestIntf servant__ = null;
                try
                {
                    servant__ = (TestIntf)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                result__ = servant__.opByte(b1, out b2Holder__, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
            b2 = b2Holder__;
            return result__;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public Test.IntEnum opInt(Test.IntEnum i1, out Test.IntEnum i2, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "opInt", Ice.OperationMode.Normal, context__);
            Test.IntEnum i2Holder__ = Test.IntEnum.ienum1;
            Test.IntEnum result__ = Test.IntEnum.ienum1;
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                TestIntf servant__ = null;
                try
                {
                    servant__ = (TestIntf)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                result__ = servant__.opInt(i1, out i2Holder__, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
            i2 = i2Holder__;
            return result__;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public Test.ShortEnum opShort(Test.ShortEnum s1, out Test.ShortEnum s2, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "opShort", Ice.OperationMode.Normal, context__);
            Test.ShortEnum s2Holder__ = Test.ShortEnum.senum1;
            Test.ShortEnum result__ = Test.ShortEnum.senum1;
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                TestIntf servant__ = null;
                try
                {
                    servant__ = (TestIntf)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                result__ = servant__.opShort(s1, out s2Holder__, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
            s2 = s2Holder__;
            return result__;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public Test.SimpleEnum opSimple(Test.SimpleEnum s1, out Test.SimpleEnum s2, _System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "opSimple", Ice.OperationMode.Normal, context__);
            Test.SimpleEnum s2Holder__ = Test.SimpleEnum.red;
            Test.SimpleEnum result__ = Test.SimpleEnum.red;
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                TestIntf servant__ = null;
                try
                {
                    servant__ = (TestIntf)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                result__ = servant__.opSimple(s1, out s2Holder__, current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
            s2 = s2Holder__;
            return result__;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public void shutdown(_System.Collections.Generic.Dictionary<string, string> context__, Ice.Instrumentation.InvocationObserver observer__)
        {
            Ice.Current current__ = new Ice.Current();
            initCurrent__(ref current__, "shutdown", Ice.OperationMode.Normal, context__);
            IceInternal.Direct.RunDelegate run__ = delegate(Ice.Object obj__)
            {
                TestIntf servant__ = null;
                try
                {
                    servant__ = (TestIntf)obj__;
                }
                catch(_System.InvalidCastException)
                {
                    throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                }
                servant__.shutdown(current__);
                return Ice.DispatchStatus.DispatchOK;
            };
            IceInternal.Direct direct__ = null;
            try
            {
                direct__ = new IceInternal.Direct(current__, run__);
                try
                {
                    Ice.DispatchStatus status__ = direct__.getServant().collocDispatch__(direct__);
                    _System.Diagnostics.Debug.Assert(status__ == Ice.DispatchStatus.DispatchOK);
                }
                finally
                {
                    direct__.destroy();
                }
            }
            catch(Ice.SystemException)
            {
                throw;
            }
            catch(_System.Exception ex__)
            {
                IceInternal.LocalExceptionWrapper.throwWrapper(ex__);
            }
        }
    }
}

namespace Test
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.5b")]
    public abstract class TestIntfDisp_ : Ice.ObjectImpl, TestIntf
    {
        #region Slice operations

        public Test.ByteEnum opByte(Test.ByteEnum b1, out Test.ByteEnum b2)
        {
            return opByte(b1, out b2, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract Test.ByteEnum opByte(Test.ByteEnum b1, out Test.ByteEnum b2, Ice.Current current__);

        public Test.ShortEnum opShort(Test.ShortEnum s1, out Test.ShortEnum s2)
        {
            return opShort(s1, out s2, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract Test.ShortEnum opShort(Test.ShortEnum s1, out Test.ShortEnum s2, Ice.Current current__);

        public Test.IntEnum opInt(Test.IntEnum i1, out Test.IntEnum i2)
        {
            return opInt(i1, out i2, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract Test.IntEnum opInt(Test.IntEnum i1, out Test.IntEnum i2, Ice.Current current__);

        public Test.SimpleEnum opSimple(Test.SimpleEnum s1, out Test.SimpleEnum s2)
        {
            return opSimple(s1, out s2, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract Test.SimpleEnum opSimple(Test.SimpleEnum s1, out Test.SimpleEnum s2, Ice.Current current__);

        public void shutdown()
        {
            shutdown(Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void shutdown(Ice.Current current__);

        #endregion

        #region Slice type-related members

        public static new readonly string[] ids__ = 
        {
            "::Ice::Object",
            "::Test::TestIntf"
        };

        public override bool ice_isA(string s)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override bool ice_isA(string s, Ice.Current current__)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override string[] ice_ids()
        {
            return ids__;
        }

        public override string[] ice_ids(Ice.Current current__)
        {
            return ids__;
        }

        public override string ice_id()
        {
            return ids__[1];
        }

        public override string ice_id(Ice.Current current__)
        {
            return ids__[1];
        }

        public static new string ice_staticId()
        {
            return ids__[1];
        }

        #endregion

        #region Operation dispatch

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus opByte___(TestIntf obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            Test.ByteEnum b1;
            b1 = (Test.ByteEnum)is__.readEnum(126);
            inS__.endReadParams();
            Test.ByteEnum b2;
            Test.ByteEnum ret__ = obj__.opByte(b1, out b2, current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            os__.writeEnum((int)b2, 126);
            os__.writeEnum((int)ret__, 126);
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus opShort___(TestIntf obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            Test.ShortEnum s1;
            s1 = (Test.ShortEnum)is__.readEnum(32766);
            inS__.endReadParams();
            Test.ShortEnum s2;
            Test.ShortEnum ret__ = obj__.opShort(s1, out s2, current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            os__.writeEnum((int)s2, 32766);
            os__.writeEnum((int)ret__, 32766);
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus opInt___(TestIntf obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            Test.IntEnum i1;
            i1 = (Test.IntEnum)is__.readEnum(2147483647);
            inS__.endReadParams();
            Test.IntEnum i2;
            Test.IntEnum ret__ = obj__.opInt(i1, out i2, current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            os__.writeEnum((int)i2, 2147483647);
            os__.writeEnum((int)ret__, 2147483647);
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus opSimple___(TestIntf obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.startReadParams();
            Test.SimpleEnum s1;
            s1 = (Test.SimpleEnum)is__.readEnum(2);
            inS__.endReadParams();
            Test.SimpleEnum s2;
            Test.SimpleEnum ret__ = obj__.opSimple(s1, out s2, current__);
            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
            os__.writeEnum((int)s2, 2);
            os__.writeEnum((int)ret__, 2);
            inS__.endWriteParams__(true);
            return Ice.DispatchStatus.DispatchOK;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus shutdown___(TestIntf obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            inS__.readEmptyParams();
            obj__.shutdown(current__);
            inS__.writeEmptyParams__();
            return Ice.DispatchStatus.DispatchOK;
        }

        private static string[] all__ =
        {
            "ice_id",
            "ice_ids",
            "ice_isA",
            "ice_ping",
            "opByte",
            "opInt",
            "opShort",
            "opSimple",
            "shutdown"
        };

        public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
        {
            int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
            if(pos < 0)
            {
                throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
            }

            switch(pos)
            {
                case 0:
                {
                    return ice_id___(this, inS__, current__);
                }
                case 1:
                {
                    return ice_ids___(this, inS__, current__);
                }
                case 2:
                {
                    return ice_isA___(this, inS__, current__);
                }
                case 3:
                {
                    return ice_ping___(this, inS__, current__);
                }
                case 4:
                {
                    return opByte___(this, inS__, current__);
                }
                case 5:
                {
                    return opInt___(this, inS__, current__);
                }
                case 6:
                {
                    return opShort___(this, inS__, current__);
                }
                case 7:
                {
                    return opSimple___(this, inS__, current__);
                }
                case 8:
                {
                    return shutdown___(this, inS__, current__);
                }
            }

            _System.Diagnostics.Debug.Assert(false);
            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
        }

        #endregion

        #region Marshaling support

        protected override void writeImpl__(IceInternal.BasicStream os__)
        {
            os__.startWriteSlice(ice_staticId(), true);
            os__.endWriteSlice();
        }

        protected override void readImpl__(IceInternal.BasicStream is__)
        {
            is__.startReadSlice();
            is__.endReadSlice();
        }

        protected override void writeImpl__(Ice.OutputStream outS__)
        {
            outS__.startSlice(ice_staticId(), true);
            outS__.endSlice();
        }

        protected override void readImpl__(Ice.InputStream inS__)
        {
            inS__.startSlice();
            inS__.endSlice();
        }

        #endregion
    }
}
