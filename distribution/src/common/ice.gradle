// **********************************************************************
//
// Copyright (c) 2003-2014 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************

buildscript {
    repositories {
        maven {
            url 'http://www.zeroc.com:8081/nexus/content/repositories/releases'
        }
    }
    dependencies {
        classpath group: 'com.zeroc.gradle.plugins', name: 'slice', version: '1.0'
    }
}

if (!project.plugins.findPlugin(com.zeroc.gradle.plugins.slice.SlicePlugin)) {
    project.apply(plugin: com.zeroc.gradle.plugins.slice.SlicePlugin)
}

ext.generatedDir = "$project.buildDir/generated"

try {
	compileJava {
		options.debug = debug
	}
} catch(MissingMethodException ex) {
	// For Android builds: thrown if compileJava isn't available.
}

// Determine the name of the Slice-to-Java translator
def isWindows = false
def slice2java = "slice2java"
def slice2freezej = "slice2freezej"
if (System.properties['os.name'].toLowerCase().contains('windows'))
{
    isWindows = true
    slice2java = "slice2java.exe"
    slice2freezej = "slice2freezej.exe"
}

// First check if ICE_HOME is set and it points at a valid installation
def env = System.getenv()
def iceHome = env['ICE_HOME']
if (iceHome != null && iceHome.length() > 0)
{
	def translator = new File("$iceHome/bin/$slice2java")
	if (!translator.exists())
	{
		throw new GradleException("Unable to find $slice2java in $iceHome, please verify ICE_HOME is " +
								  "properly configured and Ice is correctly installed.")
	}
}

def iceBinDist = true

// First check if we are building against source distribution
def iceDir
if (iceHome != null && iceHome.length() > 0)
{
	iceDir = iceHome
}

if (iceDir == null)
{
	def f1 = new File("/usr/bin/$slice2java")
	if (f1.exists())
	{
		iceDir = "/usr"
	}
}

if (iceDir == null && isWindows)
{
	def progFiles
	def arch1 = env['PROCESSOR_ARCHITECTURE']
	def arch2 = env['PROCESSOR_ARCHITEW6432']
	if (arch1 == "AMD64" || arch1 == "IA64" || arch2 == "AMD64" || arch2 == "IA64")
	{
		progFiles = env['ProgramFiles(x86)']
	}
	else
	{
		progFiles = env['ProgramFiles']
	}
	iceDir = "$progFiles\\ZeroC\\Ice-$iceVersion"
}

if (iceDir == null)
{
	def f1 = new File("/Library/Developer/Ice-$iceVersion/bin/$slice2java")
	if (f1.exists())
	{
		iceDir = "/Library/Developer/Ice-$iceVersion"
	}
}

if (iceDir == null)
{
	def f1 = new File("/opt/Ice-$iceVersion/bin/$slice2java")
	if (f1.exists())
	{
		iceDir = "/opt/Ice-$iceVersion"
	}
}

if (iceDir == null)
{
	throw new GradleException("Unable to find a valid Ice distribution, please verify ICE_HOME is properly " +
							  "configured and Ice is correctly installed.")
}

slice.slice2java = "$iceDir/bin/$slice2java"
slice.slice2freezej = "$iceDir/bin/$slice2freezej"
slice.iceHome = iceDir
slice.srcDist = false

// Set the slice and java jar directory
if (iceDir == "/usr")
{
	ext.sliceDir = "/usr/share/Ice-$iceVersion/slice"
	ext.distJarDir = "/usr/share/java"
}
else
{
	ext.sliceDir = "$iceDir/slice"
	ext.distJarDir = "$iceDir/lib"
}
