This demo shows how to prevent unauthorized access to the IceGrid
registry and node, to the Glacier2 administrative router and the
Ice.Admin functionality of IceGrid-managed servers. These components
use IceSSL secure connections to communicate and restrict access to
their endpoints.

The client and server use a regular TCP endpoint to communicate, but
they could also use a secure endpoint if necessary.

To run the demo, you first need to generate certificates for the
IceGrid registry and node, the Glacier2 administrative router, and the
server. Run the makecerts.py script to create these certificates:

$ makecerts.py

Follow the instructions provided by the script. Note that to run the
script you must have java (Java5 or greater) in your path.

For simplicity, the certificates created by makecerts.py are not
protected with a password. In a real world deployment, to ensure that
only privileged users can create new certificates and start the
IceGrid components, you would typically use a password for the
certificate authority, the IceGrid registry and node certificates and
the Glacier2 certificate. 

You could also protect the server certificate with a password and
specify the password in the server configuration in clear text.
However, this would not improve security as you would still rely on
filesystem permissions to restrict access to the configuration file,
so you might as well use a certificate without a password and rely on
the filesystem permissions to restrict access to the certificate.

Once the certificates are generated, you can start the IceGrid
registries, node, and Glacier2 router:

$ icegridregistry --Ice.Config=config.master
$ icegridregistry --Ice.Config=config.slave
$ icegridnode --Ice.Config=config.node
$ glacier2router --Ice.Config=config.glacier2

In a separate window:

$ icegridadmin --Ice.Config=config.admin -e \
    "application add application.xml"
$ client

This will deploy the application described in the file
"application.xml" and start the client.

To use icegridadmin through the Glacier2 router, you can use the
following command:

$ icegridadmin --Ice.Config=config.admin \
  --Ice.Default.Router="DemoGlacier2/router:ssl -p 4064" 

Alternatively, you can edit the config.admin file and uncomment the
Ice.Default.Router property definition.

To use the IceGrid administrative GUI, you must first configure the
connection:

- Import trusted certificate authority:

  * Select "Certificate Manager" from the File menu.
  * Select the "Trusted CAs" tab and click Import.
  * In the "Open file" dialog, navigate to the "certs" subdirectory of
    the demo. In the "Files of Type" field, select
    "PEM Files (*.pem, *crt)" and select the ca_cert.pem file.
  * When asked for the alias, give it an alias for example "ca" and
    click Ok.
  * Close the "Certificate Manager" dialog by clicking the Close
    button.

- Configure direct connection to IceGrid:

  * Select Login... from the File menu.

  * In the "Saved Connections" dialog, click "New Connection" to open
    the "New Connection" wizard.

  * Select "Direct Connection" and click Next.

  * Enter "DemoIceGrid" for the IceGrid instance name and click Next.

  * In "Endpoint Configuration", select "A hostname and port number?"
    and click Next.

  * Enter "localhost" for the Hostname. You can leave the port empty
    as the demo uses the default port. Change the protocol to "SSL"
    and click Next.

  * In the next step, select "Yes" to provide an SSL X509 Certificate.
    and click Next.

  * If "Key Alias" list is empty, click "New Alias" to open the
    "Certificate Manager". With "My Certificates" tab selected, click
    the "Import" button.

  * In the "Open file" dialog, navigate to the "certs" subdirectory of
    the demo. In the "Files of Type" field, select
    "Java Key Store Files (*.jks)" and select the certs.jks file.

  * When asked for the password for "ca_cert" type "password" and
    click Ok.

  * Close the "Certificate Manager" dialog by clicking the Close
    button.

  * "ca_cert" must now be selected in the "Key Alias" field. Enter
    "password" in the "Key password" field and click Ok to log in.

  * In "Authentication Type", select "Log in with a username and 
    password" and click Next.

  * Enter any username and password combination (the password is not
    validated). Click Finish.


- Configure routed connection to IceGrid through Glacier2:

  * Select Login... from the File menu.

  * In the "Saved Connections" dialog, click "New Connection" to open
    the "New Connection" wizard.

  * Select "Routed Connection" and click Next.

  * Enter "DemoGlacier2" for the Glacier2 instance name and click Next.

  * In "Endpoint Configuration", select "A hostname and port number?"
    and click Next.

  * Enter "localhost" for the Hostname. You can leave the port empty
    as the demo uses the default port. Change the protocol to "SSL"
    and click Next.

  * In the next step, select "Yes" to provide an SSL X509 Certificate.
    and click Next.

  * If "Key Alias" list is empty, click "New Alias" to open the
    "Certificate Manager". With "My Certificates" tab selected, click
    the "Import" button.

  * In the "Open file" dialog, navigate to the "certs" subdirectory of
    the demo. In the "Files of Type" field, select
    "Java Key Store Files (*.jks)" and select the certs.jks file.

  * When asked for the password for "ca_cert" type "password" and
    click Ok.

  * Close the "Certificate Manager" dialog by clicking the Close
    button.

  * "ca_cert" must now be selected in the "Key Alias" field. Enter
    "password" in the "Key password" field and click Ok to log in.

  * In "Authentication Type", select "Log in with a username and 
    password" and click Next.

  * Enter any username and password combination (the password is not
    validated). Click Finish.

The IceGrid registry and Glacier2 router are configured to use the
"null permissions verifier" so you can use any username/password to
login with the admin tools. In a real world deployment, you would
instead typically use the file-based permissions verifier or a custom
permissions verifier implementation.


Vista Note
----------

On Vista-derived operating systems, the IceGrid node may emit the
following warning:

  warning: Unable to lookup the performance counter name:
  Unable to connect to the specified computer or the computer is
  offline. This usually occurs when you do not have sufficient
  privileges.

This issue can be resolved by granting appropriate permissions to the
node's user account. Please refer to the Troubleshooting section of
the "Windows Services" appendix in the Ice manual for more
information.
