Oracle OCCI demo
================

This demo shows how to implement an Ice server that uses Oracle
through its Oracle C++ Call Interface (OCCI) API.

It is a fairly simple demo that illustrates how to:
 - map relational data to Ice objects, in particular convert 
   between Ice and OCCI types.
 - use an OCCI thread pool to provide Oracle connections to Ice 
   requests.
 - use Ice default servants

Building the demo
-----------------
OCCI is only available for some C++ compilers. Make sure to select 
a platform and C++ compiler supported by both Ice and OCCI.

- Setup an Oracle database with the traditional EMP/DEPT schema. 
With Oracle server 10.2, the corresponding SQL script is 
$ORACLE_HOME/rdbms/admin/utilsamp.sql.

- Create object types and views using the provided createTypes.sql 
  script, e.g.
  % sqlplus /nolog
  SQL> @createTypes.sql
 This script assumes that you can connect to your database with 
 'scott/tiger@orcl'. If you need another connect-string, please 
 edit createTypes.sql

- Oracle's ott utility needs to connect to the dabatase in order to 
  generate code from file 'DbTypes.typ'. The default connect-
  string is "scott/tiger@orcl". If this is not appropriate, please
  edit the corresponding Makefile target, or Custum build rule for
  Visual Studio projects. 

- Set the environment variable ORACLE_HOME to point to your Oracle 
installation home directory.

- On Windows, add the following directories to your Visual C++ 
  environment: 
 - Include files: $(ORACLE_HOME)\oci\include
 - Library files: $(ORACLE_HOME)\oci\lib\msvc\vc71 (when
   using Microsoft Visual Studio .NET 2003)
 - Executable files: 
    $(ORACLE_HOME)\oci\lib\msvc\vc71;$(ORACLE_HOME)\bin

- Then build as usual.

Running the demo
----------------
- Review the Oracle properties in the config.server file.
You may need to change them to connect to your Oracle instance.

- Start the server:
$ server

- Start the client in a separate terminal:
$ client

