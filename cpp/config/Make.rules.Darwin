# **********************************************************************
#
# Copyright (c) 2003-2014 ZeroC, Inc. All rights reserved.
#
# This copy of Ice is licensed to you under the terms described in the
# ICE_LICENSE file included in this distribution.
#
# **********************************************************************

#
# This file is included by Make.rules when uname is Darwin.
#

OSX_TARGET_MIN_SDK_VERSION      = 10.8

CXX			= xcrun clang++

CPPFLAGS		+= -pthread -fvisibility=hidden
CXXFLAGS		+= -Wall -Werror -mmacosx-version-min=$(OSX_TARGET_MIN_SDK_VERSION)

ifeq ($(OPTIMIZE),yes)
     #
     # By default we build binaries with both architectures when optimization is enabled.
     #
     ifeq ($(CXXARCHFLAGS),)
     	CXXARCHFLAGS	:= -arch i386 -arch x86_64
     endif
     CXXFLAGS		:= $(CXXARCHFLAGS) -O2 -DNDEBUG $(CXXFLAGS)
else
     CXXFLAGS		:= $(CXXARCHFLAGS) -g $(CXXFLAGS)
endif

ifeq ($(CPP11), yes)
    CPPFLAGS += --std=c++11
    CXXFLAGS += --stdlib=libc++
endif

#
# C++ run-time libraries, necessary for linking some shared libraries.
#
CXXLIBS		=

ifeq ($(RPATH_DIR),)
    ifdef ice_src_dist
        RPATH_DIR = @loader_path/$(libdir)
    else
        RPATH_DIR = $(runpath_libdir)
    endif
endif
LDPLATFORMFLAGS     = -Wl,-rpath,$(RPATH_DIR)

ifeq ($(CXX),g++)
     LDPLATFORMFLAGS		+= -rdynamic
endif


ifdef ice_src_dist
    shlibldflags    = $(CXXFLAGS) -L$(libdir)
else
    shlibldflags    = $(CXXFLAGS) -L$(ice_dir)/$(libsubdir)$(cpp11suffix)
endif

mklibfilename       	= $(if $(2),lib$(1).$(2).dylib,lib$(1).dylib)
mksoname           	= $(if $(2),lib$(1).$(2).dylib,lib$(1).dylib)

ifeq ($(STATICLIBS),yes)
    mklibname   = lib$(1).a
else
    mklibname   = lib$(1).dylib
endif
mklib           = libtool -static -o $(1) $(2)

curdir			= $(shell pwd)

mkshlib     = $(CXX)  -dynamiclib $(shlibldflags) -o $(1) -install_name @rpath/$(2) $(3) $(4)

BASELIBS		= -lIceUtil
LIBS			= -lIce $(BASELIBS)

ICONV_LIB               = -liconv

ICEUTIL_OS_LIBS         =
ICE_OS_LIBS             = -ldl

SSL_OS_LIBS             = -framework Security -framework CoreFoundation

PLATFORM_HAS_READLINE   := yes

ifeq ($(THIRDPARTY_HOME),)
THIRDPARTY_HOME = /Library/Developer/Ice-$(VERSION)-ThirdParty
endif

ifeq ($(DB_HOME),)
    ifneq ($(wildcard $(THIRDPARTY_HOME)/$(libsubdir)$(cpp11suffix)/libdb_cxx.dylib),)
        DB_HOME = $(THIRDPARTY_HOME)
    endif
endif

ifeq ($(MCPP_HOME),)
    ifneq ($(wildcard $(THIRDPARTY_HOME)/$(libsubdir)/libmcpp.a),)
        MCPP_HOME = $(THIRDPARTY_HOME)
    endif
endif


