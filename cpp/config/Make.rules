# **********************************************************************
#
# Copyright (c) 2002
# ZeroC, Inc.
# Billerica, MA, USA
#
# All Rights Reserved.
#
# Ice is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License version 2 as published by
# the Free Software Foundation.
#
# **********************************************************************

#
# The locations of STLport, Berkeley DB, and other libraries used by
# this package.
#
# The values below can be overwritten by defining them as environment
# variables. For example, if you are using a bourne shell or
# compatible, you can overwrite the location of STLport like this:
#
# export STLPORT_HOME=/usr/local/STLport-4.5
#
# If you don't want to use STLport, but the compiler's default STL
# implementation, then define STLPORT_HOME as empty string.
#
#STLPORT_HOME	?= /opt/STLport
DB_HOME		?= /opt/db
OPENSSL_HOME	?= /opt/openssl
XERCESC_HOME    ?= /opt/xerces-c

#
# Define OPTIMIZE as yes if you want to build with
# optimization. Otherwise Ice is build with debug information.
#
#OPTIMIZE=yes

#
# Don't change these lines!
#
SHELL		= /bin/sh
VERSION		= 0.0.1
bindir		= $(top_srcdir)/bin
libdir		= $(top_srcdir)/lib
includedir	= $(top_srcdir)/include
slicedir	= $(top_srcdir)/slice

ifneq ($(STLPORT_HOME),)
    STLPORT_FLAGS	= -I$(STLPORT_HOME)/include/stlport
    ifeq ($(OPTIMIZE),yes)
        STLPORT_LIBS	= -L$(STLPORT_HOME)/lib -lstlport_gcc
    else
        STLPORT_LIBS	= -L$(STLPORT_HOME)/lib -lstlport_gcc_stldebug
    endif
endif

XERCESC_FLAGS	= -I$(XERCESC_HOME)/include
XERCESC_LIBS	= -L$(XERCESC_HOME)/lib -lxerces-c

OPENSSL_FLAGS	= -I$(OPENSSL_HOME)/include
OPENSSL_LIBS	= -L$(OPENSSL_HOME)/lib -lssl -lcrypto

#
# Don't change anything below this line!
#

CXX		= c++
CXXFLAGS 	= -ftemplate-depth-128 -fPIC -Wall
ifeq ($(OPTIMIZE),yes)
    CXXFLAGS	:= -O3 -DNDEBUG $(CXXFLAGS)
else
    CXXFLAGS	:= -g $(CXXFLAGS)
endif

CPPFLAGS	= -I$(includedir) $(STLPORT_FLAGS)
ICECPPFLAGS	= -I$(slicedir)

LDFLAGS		= -L$(libdir)
SHLIB_LDFLAGS	= -shared -Xlinker -soname -Xlinker $(@F)

LIBEXT		= so

BASELIBS	= -lIceUtil -lpthread -luuid $(STLPORT_LIBS)
LIBS		= -lIce -ldl -lbz2 $(BASELIBS)
SSLLIBS		= -lIceSSL $(OPENSSL_LIBS)

SLICE2CPP	= $(bindir)/slice2cpp
SLICE2XSD	= $(bindir)/slice2xsd
SLICE2FREEZE	= $(bindir)/slice2freeze
SLICE2DOCBOOK	= $(bindir)/slice2docbook

EVERYTHING	= all depend clean

.SUFFIXES:
.SUFFIXES:	.cpp .c .o

.cpp.o:
	$(CXX) -c $(CPPFLAGS) $(CXXFLAGS) $<

.c.o:
	$(CC) -c $(CPPFLAGS) $(CFLAGS) $<

%.$(LIBEXT): %.$(LIBEXT).$(VERSION)
	rm -f $@
	ln -s $(@F).$(VERSION) $@

all:: $(SRCS) $(TARGETS)

depend:: $(SRCS) $(SLICE_SRCS)
	-rm -f .depend
	if test -n "$(SRCS)" ; then \
	    $(CXX) -DMAKEDEPEND -M $(CXXFLAGS) $(CPPFLAGS) $(SRCS) | \
	    $(top_srcdir)/config/makedepend.py >> .depend; \
	fi
	if test -n "$(SLICE_SRCS)" ; then \
	    $(SLICE2CPP) --depend $(ICECPPFLAGS) $(SLICE_SRCS) | \
	    $(top_srcdir)/config/makedepend.py >> .depend; \
	fi

clean::
	-rm -f $(TARGETS)
	-rm -f core *.o *.bak
