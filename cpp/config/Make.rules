# **********************************************************************
#
# Copyright (c) 2001
# ZeroC, Inc.
# Billerica, MA, USA
#
# All Rights Reserved.
#
# Ice is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License version 2 as published by
# the Free Software Foundation.
#
# **********************************************************************

#
# The locations of STLport, Berkeley DB, and other libraries used by
# this package.
#
# The values below can be overwritten by defining them as environment
# variables. For example, if you are using a bourne shell or
# compatible, you can overwrite the location of STLport like this:
#
# export STLPORT_HOME=/usr/local/STLport-4.5
#
STLPORT_HOME	?= /opt/STLport
DB_HOME		?= /opt/db
OPENSSL_HOME	?= /opt/openssl
XERCESC_HOME    ?= /opt/xerces-c

#
# Don't change these lines!
#
SHELL		= /bin/sh
VERSION		= 0.0.1
bindir		= $(top_srcdir)/bin
libdir		= $(top_srcdir)/lib
includedir	= $(top_srcdir)/include
slicedir	= $(top_srcdir)/slice

XERCESC_FLAGS	= -I$(XERCESC_HOME)/include
XERCESC_LIBS	= -L$(XERCESC_HOME)/lib -lxerces-c

OPENSSL_FLAGS	= -I$(OPENSSL_HOME)/include
OPENSSL_LIBS	= -L$(OPENSSL_HOME)/lib -lssl -lcrypto

#
# Experts only: You can change the following lines, for example, to
# set different compilation options for debug or optimization
#

#
# GCC 2.96
#
CXX		= c++
CXXFLAGS	= -g -ftemplate-depth-128 -fPIC -Wall
#CXXFLAGS	= -O3 -DNDEBUG -ftemplate-depth-128 -fPIC -Wall
CPPFLAGS	= -I$(includedir) -I$(STLPORT_HOME)/include/stlport
LDFLAGS		= -L$(libdir) -L$(STLPORT_HOME)/lib
BASELIBS	= -lIceUtil -lstlport_gcc_stldebug -lpthread -luuid -ldl -lbz2
#BASELIBS	= -lIceUtil -lstlport_gcc -lpthread -luuid -ldl -lbz2
LIBS		= -lIce $(BASELIBS)
SSLLIBS		= -lIceSSL $(OPENSSL_LIBS)
CC		= gcc
CFLAGS		= $(CXXFLAGS)

#
# GCC 3.2
#
#CXX		= c++
#CXXFLAGS	= -g -ftemplate-depth-128 -fPIC -Wall
##CXXFLAGS	= -O3 -DNDEBUG -ftemplate-depth-128 -fPIC -Wall
#CPPFLAGS	= -I$(includedir)
#LDFLAGS		= -L$(libdir)
#BASELIBS	= -lIceUtil -lpthread -luuid -ldl -lbz2
#LIBS		= -lIce $(BASELIBS)
#SSLLIBS		= -lIceSSL $(OPENSSL_LIBS)
#CC		= gcc
#CFLAGS		= $(CXXFLAGS)

#
# Intel's icc compiler (Experimental!)
#
#CXX		= icc
#CXXFLAGS	= -g -KPIC -w1
##CXXFLAGS	= -O3 -DNDEBUG -KPIC
#CPPFLAGS	= -I$(includedir)
#LDFLAGS 	= -L$(libdir) -L$(OPENSSL_HOME)/lib -L$(XERCESC_HOME)/lib
#BASELIBS	= -lIceUtil -lpthread -luuid -ldl -lbz2
#LIBS		= -lIce $(BASELIBS)
#SSLLIBS	= -lIceSSL $(OPENSSL_LIBS)
#CC		= gcc
#CFLAGS		= $(CXXFLAGS)

#
# Don't change anything below this line!
#

SLICE2CPP	= $(bindir)/slice2cpp
SLICE2XSD	= $(bindir)/slice2xsd
SLICE2FREEZE	= $(bindir)/slice2freeze
SLICE2DOCBOOK	= $(bindir)/slice2docbook


EVERYTHING	= all depend clean

.SUFFIXES:
.SUFFIXES:	.cpp .c .o

.cpp.o:
	$(CXX) -c $(CPPFLAGS) $(CXXFLAGS) $<

.c.o:
	$(CC) -c $(CPPFLAGS) $(CFLAGS) $<

all:: $(SRCS) $(TARGETS)

depend:: $(SRCS) $(SLICE_SRCS)
	-rm -f .depend
	if test -n "$(SRCS)" ; then \
	    $(CXX) -DMAKEDEPEND -M $(CXXFLAGS) $(CPPFLAGS) $(SRCS) | \
	    $(top_srcdir)/config/makedepend.py >> .depend; \
	fi
	if test -n "$(SLICE_SRCS)" ; then \
	    $(SLICE2CPP) --depend $(SLICE2CPPFLAGS) $(SLICE_SRCS) | \
	    $(top_srcdir)/config/makedepend.py >> .depend; \
	fi

clean::
	-rm -f $(TARGETS)
	-rm -f core *.o *.bak
