When installing from RPMs, the demos for a particular language mapping
are included with the appropriate 'devel' RPM. For example, the Java
demos are included in the ice-java-devel RPM. 

Building the Ice Demos
======================

For your convenience, the Ice demo distribution includes all of the
demos included in the Ice source distribution. These demos can be
built against a pre-existing Ice distribution.  

If you have installed Ice from RPM packages, you can build the demos
by visiting each demo directory (e.g., demo, demoj, democs) and
running 'gmake' or 'ant' as appropriate. The Ice for Python demos do
not need to be compiled. 

If you have installed Ice from an Ice binary distribution, or from
a source distribution by running 'gmake install', you must set the
ICE_HOME environment variable to the Ice installation directory. You
must also tell your system where to find the Ice translators and shared
libraries, which is normally done using environment variables.

On most systems the translators should be in a directory in your PATH
environment variable, and the shared libraries should be in a
directory in your system's shared library search path. Shared
libraries are located using a system-specific environment variable,
such as LD_LIBRARY_PATH (Linux and other UNIX variants), SHLIB_PATH
(32 bit HP-UX), DYLD_LIBRARY_PATH (Mac OS X) and LIBPATH (IBM AIX).
You can test whether you have configured your system properly by
running a Slice translator that was installed on your system. For
example:

myprompt> slice2cpp

Without arguments, the translator will display usage information. If
you get a 'command not found' or 'libIce.so.2.1.0 not found' or a
similar error, verify that the files are in the expected location,
your environment variables are set properly and that you have the
proper permissions on these files.

To verify ICE_HOME is set, simply echoing the environment variable
works on most systems. Assuming Ice is installed in /opt/Ice:

myprompt> echo $ICE_HOME
/opt/Ice

Once you have verified that your environment is configured correctly,
you can build the demos by visiting each demo directory and running
'gmake' or 'ant' as appropriate. The Ice for Python demos do not need
to be compiled.


Running the Ice Demos
=====================

You need to make some additional changes to your environment in order to
run the demos.

Ice for C++
-----------

The C++ demos require the Ice run time and tools, as well as several
third-party libraries. If you have managed to build the C++ demos, you
already have your environment set up properly for the Ice run time.
However, Ice uses other third party libraries such as OpenSSL that
should also be accessible. 

Ice for Java
------------

The Java demos require that you have Ice.jar, the Ice ant task classes
and the Berkeley DB db.jar in your CLASSPATH.

If Ice was installed from RPMs, Ice.jar and the ant task classes are in
/usr/lib/Ice-<version>/Ice.jar and /usr/lib/Ice-<version>/ant,
respectively. Otherwise, Ice.jar and the ant task classes will be in the
Ice installation's lib and ant directories, respectively.

If BerkeleyDB was installed from RPMs, db.jar is in
/usr/share/java/db.jar. Otherwise, db.jar will be in the Berkeley DB
installation's lib directory.

Also make sure that the Berkeley DB shared libraries are in your
java.library.path. On Linux, this can be achieved by adding <Berkeley
DB home>/lib to your LD_LIBRARY_PATH (NOTE: this is required even if
the BerkeleyDB shared libraries are installed in /usr/lib).
 
Ice for C#
----------

To run the C# demos under Mono, you must include the library directory
containing icecs.dll in your MONO_PATH environment variable, unless
you are using an RPM installation, in which case the libraries are
installed in the GAC.

See the README file in the top-level demo directory for more detail.

Ice for Python
--------------

To run the Python demos, the Ice Python modules and the Ice Python
extension must be in the PYTHONPATH environment variable. You also
need to configure the ICEPY_HOME environment variable to indicate your
Ice for Python installation. If you installed Ice for Python from an
Ice binary distribution, it should be the same as your ICE_HOME
environment variable. If you have installed Ice for Python from the
source distribution, you may have installed it in a directory other
than the ICE_HOME directory.  

For RPM installations, the environment variables should be:

ICEPY_HOME=/usr
PYTHONPATH=/usr/lib:/usr/lib/Ice-<version>/python:$PYTHONPATH

For non-RPM installations, the environment variables should be:

ICEPY_HOME=/opt/IcePy-<version>
PYTHONPATH=$ICEPY_HOME/lib:$ICEPY_HOME/python:$PYTHONPATH

-- or --

ICEPY_HOME=/opt/Ice-<version>
PYTHONPATH=$ICEPY_HOME/lib:$ICEPY_HOME/python:$PYTHONPATH
