Building the Demos 
==================

The following sections describe how to build the demos for the following
environments:

  - Unix
  - Windows using Borland C++ Builder
  - Windows using Microsoft C++ Environments

Unix
----

These instructions assume that you have correctly configured your
environment according to the directions in the README or platform-
specific INSTALL file included with your Ice installation.

You can build the demos by visiting each demo directory (e.g., demo,
demoj, democs) and running 'gmake' or 'ant' as appropriate. The Ice
for Python and Ice for PHP demos do not need to be compiled.

gmake 3.80 is required to build the C++ and C# demos. The 'ant'
utility is required to build the Java demos, and can be downloaded
from

http://ant.apache.org/bindownload.cgi

Ice requires ant 1.6.3 or later, but we recommend using the most
recent release.

Windows using Borland C++ Builder
---------------------------------

The build system included in the demo archive is a 'makefile' based
system and requires that you open a Windows console (Command Line). The
Borland installer typically configures the Windows environment so you
should not need additional configuration to run the Borland C++ compiler
from the command line. However, you will need to acquire Microsoft's
'make', NMAKE, to run the demo build. It you do not already have it
installed on your system, you can download it using the following link:

http://download.microsoft.com/download/vc15/patch/1.52/w95/en-us/nmake15.exe

There are no projects for the Borland IDE at this time.  

The next step is to configure your environment for the Ice installation.
The ICE_HOME environment variable tells the build system where the Ice
installation is so it can find header files, import libraries, etc. You
should also add the directory containing the Ice Slice translators and
other command line tools to your PATH. This is usually the "bin"
subdirectory under the directory you set for the ICE_HOME environment
variables. For example:

c:\Documents and Settings\IceFan>set ICE_HOME=c:\Ice-@ver@
c:\Documents and Settings\IceFan>set PATH=%ICE_HOME%\bin;%PATH%

Now, change to the directory containing the demos and run the command
"nmake /f Makefile.mak". For example:

c:\Documents and Settings\IceFan>cd Ice-@ver@-demos
c:\Documents and Settings\IceFan\Ice-@ver@-demos>nmake /f Makefile.mak

Now you should be able to proceed to the next step of running the demos.

Windows using Microsoft C++ Enviroments
---------------------------------------

These instructions apply to all supported versions of Microsoft C++
development environments.

The build system included in the demo archive is a 'makefile' based
system and requires that you open a Windows console (Command Line) and
configure the environment for your development tools. If you prefer
building the demos from the IDE, please download the Windows installer
for your version of Microsoft development environment or download the
Ice source distribution.

To build from the console, you may have to take steps to configure your
environment for you compiler. This usually involves running a file named
vcvars32.bat (Visual C++ 6.0) or vsvars32.bat (VS .NET 2003 and VS
2005). A quick, but not definitive test, is to try running "cl" or
"nmake" from a console window. If you are using VS .NET 2003 or VS 2005,
there should be a shortcut in your development tool's Start menu entry
named "Visual Studio 2005 Command Prompt", etc. Click on this to start a
console window with your development environment already configured. 

The next step is to configure your environment for the Ice installation.
The ICE_HOME environment variable tells the build system where the Ice
installation is so it can find header files, import libraries, etc. You
should also add the directory containing the Ice Slice translators and
other command line tools to your PATH. This is usually the "bin"
subdirectory under the directory you set for the ICE_HOME environment
variables. For example:

c:\Documents and Settings\IceFan>set ICE_HOME=c:\Ice-@ver@
c:\Documents and Settings\IceFan>set PATH=%ICE_HOME%\bin;%PATH%

Now, change to the directory containing the demos and run the command
"nmake /f Makefile.mak". For example:

c:\Documents and Settings\IceFan>cd Ice-@ver@-demos
c:\Documents and Settings\IceFan\Ice-@ver@-demos>nmake /f Makefile.mak

Now you should be able to proceed to the next step of running the demos.

Running the Ice Demos
=====================

Most demos consist of a single server and client. The instructions to
run a demo depend on the programming language. Instructions for each
language are included below.  Some demo directories contain README
files if additional steps are necessary.


Running the C++ demos
=====================

To run a demo, open a terminal terminal window, change to the desired
demo directory, and enter the following command to run the server:

$ ./server

To run the client, open another terminal window, also change to the
desired demo directory, and run:

$ ./client


Running the Java demos
======================

To run the demos you need to add classes to your CLASSPATH.

export CLASSPATH=classes:$CLASSPATH

To run a demo, open a terminal window, change to the desired demo
directory, and enter the following command to run the server:

$ java Server

To run the client, open another terminal window, also change to the
desired demo directory, and run:

$ java Client


Running the C# demos
====================

The C# demos are only officially supported under Linux or Windows,
therefore the Ice for C# runtime is only included in the Linux and
Windows distributions.

To run a demo, open a terminal window, change to the desired demo
directory, and enter the following command to run the server:

$ ./server.exe

To run the client, open another terminal window, also change to the
desired demo directory, and run:

$ ./client.exe


Running the Python demos
========================

To run a demo, open a terminal window, change to the desired demo
directory, and enter the following command to run the server:

$ python Server.py

To run the client, open another terminal window, also change to the
desired demo directory, and run:

$ python Client.py


Running the PHP demos
=====================

Two PHP demos are provided in the demophp directory.

You'll need PHP 5.1.4 to use the demos. Source and binary
distributions of PHP can be obtained from

http://www.php.net/downloads.php

The Ice extension for PHP is provided as a dynamically-loadable shared
library (lib/icephp.so) in the Linux and MacOS X binary
distributions. On all other Unix platforms, the Ice extension can only
be used in a static configuration, which requires that you build PHP
and the Ice extension from source code. Please refer to the INSTALL
file included in the IcePHP source distribution for more information.

The example in demophp/Ice/hello demonstrates the use of the Ice
extension for PHP in a dynamic Web page, whereas the example in
demophp/Ice/value requires PHP's command line interpreter. Both
examples require that an Ice server be available; a matching server
from any of the other language mappings can be used. A README file is
provided in each of the example directories.

Note that you must modify the php.ini files in each demo directory to
match your PHP installation and ensure that the Ice extension is
loaded properly.
