======================================================================
The Internet Communications Engine
======================================================================

Ice is a modern alternative to object middleware such as CORBA or
COM/DCOM/COM+. It is easy to learn, yet provides a powerful network
infrastructure for demanding technical applications. It features an
object-oriented specification language, easy to use C++, Java, Python,
PHP, C#, and Visual Basic mappings, a highly efficient protocol,
asynchronous method invocation and dispatch, dynamic transport
plug-ins, TCP/IP and UDP/IP support, SSL-based security, a firewall
solution, and much more.

Ice is available under the terms of the GNU General Public License
(GPL) (see LICENSE file). Commercial licenses are available for
customers who wish to use Ice with proprietary products. Please
contact sales@zeroc.com for more information about licensing Ice.


======================================================================
About this distribution
======================================================================

This distribution is a binary release of Ice 2.1.0 for Linux and
includes the following components:

- The Ice run time, including executables for the Ice services, HTML
  documentation, Slice files, and the C++ run time libraries.
- Run time libraries for Java, Python, and C# (Mono). These libraries
  enable you to execute Ice applications.
- Development kits for C++, Java, Python and C# (Mono). A development
  kit is required for building Ice applications using a supported
  language mapping. The development kits include a variety of
  examples that demonstrate various Ice features.


======================================================================
Requirements
======================================================================

This binary distribution was compiled on Linux Fedora Core 3 (FC3)
using FC3's default C++ compiler, GCC 3.4.2.

This distribution also depends on a number of third-party libraries:

- Berkeley DB 4.2.52
- expat 1.95
- OpenSSL 0.97
- bzip2 1.0.2
- readline 4.3
- ncurses 5.4

All of these libraries are included with your FC3 distribution in the
following RPMs:

Berkeley DB    db4, db4-utils, db4-java
expat 	       expat
OpenSSL	       openssl, openssl-devel
bzip2          bzip2-libs
readline       readline
ncurses        ncurses

If you prefer to install the third-party libraries yourself, be
aware that Berkeley DB must be configured with --enable-cxx and
--enable-java.

Ice for Java requires J2SE 1.4.2 or 1.5.0. RPMs can be obtained
from JavaSoft at http://www.javasoft.com/j2se

The Ice extension for Python included in this distribution requires
Python 2.3.4. The Python run time RPM is python-2.3.4-11. If you
prefer to use Python 2.4, you can download the Ice for Python source
code from the ZeroC web site at http://www.zeroc.com/download.html.

Ice for C# requires Mono 1.0.6, available at
http://www.mono-project.com/Downloads


======================================================================
64 bit builds on x86-64
======================================================================

This distribution only contains 32-bit binaries. If you need a 64-bit
version, you can download the Ice sources from the ZeroC web site at
http://www.zeroc.com/download.html and build Ice in 64-bit mode. See
the INSTALL.LINUX file of the source distribution for more details.


======================================================================
Setting up your environment to use Ice
======================================================================


General
-------

The RPM installation places the Ice run time libraries and
executables in standard directories so that no changes are necessary
to PATH or LD_LIBRARY_PATH.

If you did not install using RPMs, you need to add the Ice bin
directory to your PATH and the lib directory to your LD_LIBRARY_PATH.
For example, the following bash commands assume you have installed Ice
in /opt/Ice-2.1.0:

$ export PATH=/opt/Ice-2.1.0/bin:$PATH
$ export LD_LIBRARY_PATH=/opt/Ice-2.1.0/lib:$LD_LIBRARY_PATH


C++
---

When compiling Ice for C++ programs, you must pass the location of the
Ice include directory to the compiler with the -I option, and the
location of the Ice lib directory with the -L option.


Java
----

To use Ice for Java, you must add Ice.jar to your CLASSPATH. If you
installed the RPMs, the bash command would look like this:

$ export CLASSPATH=/usr/lib/Ice-2.1.0/Ice.jar:$CLASSPATH

Note that the Freeze component of Ice for Java requires Berkeley DB.
In order to use Freeze, you must add db.jar to your CLASSPATH. In
addition, if your installation of Berkeley DB is in a nonstandard
location, you must add its lib directory to your LD_LIBRARY_PATH.

Python
------

To use Ice for Python, the PYTHONPATH environment variable must
be updated so that the interpreter can load the Ice extension and
supporting Python files.

For an RPM installation, the following bash command is sufficient:

$ export PYTHONPATH=/usr/lib/Ice-2.1.0/python

Otherwise, PYTHONPATH should contain the python and lib directories
from your Ice installation:

$ export PYTHONPATH=/opt/Ice-2.1.0/python:/opt/Ice-2.1.0/lib


Mono
----

The RPM installation adds the C# run time libraries to the global
assembly cache (GAC), so that no changes to your environment are
necessary to locate the assemblies.

Otherwise, you can update MONO_PATH with the directory containing
the C# run time libraries, as the following bash command shows:

$ export MONO_PATH=/opt/Ice-2.1.0/bin:$MONO_PATH

Alternatively, you can add the libraries to the GAC yourself
using a command like this:

$ gacutil -i /opt/Ice-2.1.0/bin/icecs.dll


======================================================================
Demos and documentation
======================================================================

If you installed Ice from RPMs, see README.DEMOS for instructions on
building and running the demos. Otherwise, you need to download the
Ice-2.1.0-demos.tar.gz package from the ZeroC web site at
http://www.zeroc.com/download.html and see the README.DEMOS file
included in that package.

See doc/README.html for information on the documentation included with
this distribution.
