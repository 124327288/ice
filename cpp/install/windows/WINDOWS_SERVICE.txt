This file describes how to install the IceGrid registry, IceGrid node,
and Glacier2 router as Windows services.


Overview
--------

There are several issues to consider before installing any Windows
service:

* Under what user account will the service run?
* What files does the service need to access?
* Does the service create new files or directories?
* What other resources does the service require?

Your choice for the user account influences the actions that are
required to address the remaining issues shown above. We recommend
that you use the "Local Service" user account, which has fewer
privileges than the "Local System" account that Windows assigns by
default to a newly-installed service.

After selecting a user account, your next task is to prepare whatever
filesystem resources are required and ensure that the service has the
necessary permissions to access those resources. A common mistake is
assuming that the service will be able to access a file or directory
that you created using your current account. With careful planning and
preparation, you can avoid failures caused by insufficient permissions
that are often difficult to diagnose.


Filesystem Resources
--------------------
 
Windows services generally require access to filesystem resources, and
Ice services are no exception. For example, an Ice service is often
configured using a configuration file, and at a minimum the service
requires read access to that file (the Ice run time never writes to a
configuration file). The service may also need the ability to create
files and databases to maintain its persistent state.

For the purposes of this discussion, let us assume that you have
decided to use "Local Service" as the user account for your service,
and that you need to create a directory in which to store the
service's configuration file. As an example, we will use the following
directory on Windows XP and Windows Server 2003:

  C:\Documents and Settings\Local Service\Local Settings\Application Data\MyApp

Note that we would use a different directory on Windows Vista:

  C:\Users\Local Service\AppData\Local\MyApp

In the discussion below, we use the Windows XP/Windows Server 2003
directory for our examples.

For the service to be able to read its configuration file, it must
have sufficient privileges to access the entire directory hierarchy.
In a command window, we execute the following steps to create the
"Local Service" directory:

  > cd \Documents and Settings
  > mkdir "Local Service"

At this point we could create the rest of the directory hierarchy and
then create a configuration file. However, a newly-created file or
directory inherits the privileges of its enclosing directory, and we
have not yet modified the privileges of the "Local Service" directory
to grant access to the Local Service account. At present, the
privileges of the "Local Service" directory are inherited from
"Documents and Settings" and require modification. In general, it is
better to establish the necessary access rights on the parent
directory prior to creating any subdirectories or files, so we will
modify the "Local Service" directory first.

On all Windows systems, we can use the command-line utility "cacls",
which is described at the link below:

  http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/cacls.mspx?mfr=true

The following command does what we need:

  > cacls "Local Service" /G "Local Service":F Administrators:F

By omitting the /E option to cacls, we have replaced all of the
prior access rights on the directory with the rights given in this
command. As a result, the Local Service account and anyone in the
Administrators group are granted full access to the directory,
while all others are forbidden. (We grant full access to the
Administrators group because presumably someone other than the
Local Service account will need to manage the subdirectory,
create the configuration file, an so on). You can verify the
directory's current privilege settings by running cacls without
options:

  > cacls "Local Service"

Now we can create the MyApp subdirectory and the service's
configuration file, and they will automatically inherit the access
rights we established for the "Local Service" directory. If you want
to further restrict access to files or subdirectories, you can modify
them as necessary using the cacls utility. Note however that certain
actions may cause a file to revert back to the access rights of its
enclosing directory. For example, modifying a file using a text editor
is often the equivalent of erasing the file and recreating it, which
discards any access rights you may have previously set for the file.

On some versions of Windows XP, and on Windows Server 2003 and Windows
Vista, you can manage privilege settings interactively using Windows
Explorer. For example, right click on the "Local Service" directory,
select Properties, and select the Security tab. Next select Advanced
and Edit, uncheck "Include inheritable permissions from this object's
parent", and select Copy. Remove all permission entries, then add
entries for Local Service and the Administrators group and grant "Full
Control" to each.


Installing a Glacier2 Router Service
------------------------------------

The Glacier2 router has no persistent state aside from an optional
configuration file that is read at startup. A default configuration
file is included with the Ice distribution and can be found in
C:\Ice-@ver@\config\glacier2router.cfg. You should review the
comments and property settings in this file to familiarize yourself
with a typical router installation.

You can modify the default configuration file to suit your needs, copy
it to use as a starting point for your own configuration, or create an
entirely new file. You can even omit a configuration file altogether
and use command-line options to define your properties, but we do not
recommend that approach because it requires that you reinstall the
service each time you need to change its command-line options.

Follow these steps to install a Glacier2 router as a service:

1. In a command window, execute the following line:

   > glacier2router --install Glacier2Router \
     --Ice.Config=C:\Ice-@ver@\config\glacier2router.cfg

   If you are using a different configuration file, modify the
   --Ice.Config option to use the proper path name.

   Installing the service on Windows Vista with UAC enabled requires
   administrator privileges. In this case, run the command shell as
   administrator, right-click the command shell icon and select "Run
   as administrator", then execute the installation command.

2. Open the Services control panel from your Administrative Tools
   menu, right click on the entry for "Glacier2Router" and select
   Properties. Open the Log On tab and enter the user account you
   have chosen.

   For the Local Service account, use the name "Local Service" on
   Windows Vista and "NT Authority\LocalService" on Windows XP and
   Windows Server 2003. The password fields must be manually set to
   empty.

3. Verify that the user account you selected for the service has
   access to the configuration file and its enclosing directory, as
   described in the Filesystem Resources section above. If you are
   using the default configuration file, it likely already has
   sufficient privileges to allow the service to read the file.

4. Start the service and verify that it started successfully. If
   the service failed to start, check the Event Log for error
   messages.


Installing an IceGrid Registry or Node Service
----------------------------------------------

The IceGrid registry and node services each require full access to
subdirectories. The default configuration files included with the Ice
distribution contain settings that reflect our recommendations for
these directories, but you can use the directories of your choosing.
These configuration files (icegridregistry.cfg and icegridnode.cfg)
can be found in the directory C:\Ice-@ver@\config. You should review
the comments and property settings in these files to familiarize
yourself with a typical IceGrid installation.

You can modify the default configuration files to suit your needs,
copy them to use as a starting point for your own configuration, or
create entirely new files. You can even omit configuration files
altogether and use command-line options to define your properties, but
we do not recommend that approach because it requires that you
reinstall a service each time you need to change its command-line
options.

Several installation options are available for IceGrid registry and
node services. You are not required to install both a registry and
node service on every host. However, if you plan to install both
services on a host, you can optionally configure them to run as a
single service. Please consult the Ice manual if you need more
information on the purpose of each service and the relationship
between them.

Follow these steps to install the IceGrid registry and node as
services:

1. In a command window, execute the following lines:

   > icegridnode --install IceGridNode \
     --Ice.Config=C:\Ice-@ver@\config\icegridnode.cfg

   > icegridregistry --install IceGridRegistry \
     --Ice.Config=C:\Ice-@ver@\config\icegridregistry.cfg

   If you are using different configuration files, modify the
   --Ice.Config options to use the proper path names.

   Installing a service on Windows Vista with UAC enabled requires
   administrator privileges. In this case, run the command shell as
   administrator, right-click the command shell icon and select "Run
   as administrator", then execute the installation commands.

2. Open the Services control panel from your Administrative Tools
   menu and edit the properties of the services "IceGridNode" and
   "IceGridRegistry". For each service, right click on the entry and
   select Properties. Open the Log On tab and enter the user account
   you have chosen.

   For the Local Service account, use the name "Local Service" on
   Windows Vista and "NT Authority\LocalService" on Windows XP and
   Windows Server 2003. The password fields must be manually set to
   empty.

3. Verify that the user account you selected for the services has
   access to the configuration files and their enclosing directories,
   as described in the Filesystem Resources section above. If you are
   using the default configuration files, they likely already have
   sufficient privileges to allow the services to read the files.

4. Prepare the subdirectories for each service using the steps
   outlined in the Filesystem Resources section above. The services
   require that their subdirectories already exist.

   For the registry service, create the directory identified by the
   configuration property IceGrid.Registry.Data.

   For the node service, create the directories identified by the
   properties IceGrid.Node.Data and IceGrid.Node.Output.

5. If you are installing an IceGrid node and you intend to use the
   adaptive load balancing policy, you may need to give additional
   privileges to the node's user account. See the section IceGrid
   Node Performance Monitoring below for more information.

6. Start the services and verify that they started successfully. If
   a service failed to start, check the Event Log for error messages.


IceGrid Node Performance Monitoring
-----------------------------------

The IceGrid node's user account must have permission to read the
following registry key if you intend to use IceGrid's adaptive load-
balancing policy:

HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Perflib

On Windows Server 2003 or Windows Vista, no additional action is
required if the IceGrid node runs under the "Local Service" account
(this account already has the right permissions). Otherwise, if you
use Windows XP, or if you run the IceGrid node under a different
account, you must edit the permissions of the Perflib registry key.

The simplest approach is to edit the permissions of the registry key
directly:

1. Start regedit. Navigate to the above key.

2. Right click and select "Permissions...".

3. Add permission for the given account. Select "Read". Press OK.

Another solution is to add the user to the "Performance Monitor Users"
group. See the following Microsoft article for details:

http://technet2.microsoft.com/WindowsVista/en/library/ab3b2cfc-b177-43ec-8a4d-0bfac62d88961033.mspx?mfr=true


Windows Firewall
----------------

Depending on what user account you run the services under you may not
receive any notification that the Windows Firewall is blocking the
ports that are used by your service.

See the following Microsoft article for details:

http://technet2.microsoft.com/WindowsServer/en/library/b3440a22-ae9c-45a3-8a61-da3f8a2c791f1033.mspx?mfr=true

If you do not receive notifications then you will have to manually add
a firewall exception. For example, if you want to allow traffic to the
Glacier2 router to traverse the Windows Firewall you would do the
following:

1. Open the Windows Firewall Settings panel and navigate to the
   Exceptions panel.

2. Select "Add program..."

3. Select "Browse" and navigate to the Glacier2 router executable, and
   select "OK".

Note that adding an exception for a Program unblocks all ports that
are listened on by that application. This means that you must be
diligent about the endpoint configuration for your service.
