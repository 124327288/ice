<!--
**********************************************************************
Copyright (c) 2001
MutableRealms, Inc.
Huntsville, AL, USA

All Rights Reserved
**********************************************************************
-->

<para>
If not stated otherwise in the description of the individual
properties, the default value for all properties is the empty
string. If the property takes a numeric parameter as value, the empty
string is interpreted as zero.
</para>

<!-- ********************************************************************** -->
<section><title>Tracing</title>
<!-- ********************************************************************** -->

<section><title>Ice.Trace.Network</title>
<section><title>Synopsis</title>
<synopsis>
Ice.Trace.Network=<replaceable>num</replaceable>
</synopsis>
</section>
<section>
<title>Description</title>
<para>
The network tracing level:
<informaltable>
<tgroup cols=2>
<tbody>
<row>
<entry>0</entry>
<entry>no network tracing</entry>
</row>
<row>
<entry>1</entry>
<entry>trace connection establishment and closure</entry>
</row>
<row>
<entry>2</entry>
<entry>like 1, but more detailed</entry>
</row>
<row>
<entry>3</entry>
<entry>like 2, but also trace data transfers</entry>
</row>
</tbody>
</tgroup>
</informaltable>
</para>
</section>
</section>

<section><title>Ice.Trace.Protocol</title>
<section><title>Synopsis</title>
<synopsis>
Ice.Trace.Protocol=<replaceable>num</replaceable>
</synopsis>
</section>
<section>
<title>Description</title>
<para>
The protocol tracing level:
<informaltable>
<tgroup cols=2>
<tbody>
<row>
<entry>0</entry>
<entry>no protocol tracing</entry>
</row>
<row>
<entry>1</entry>
<entry>trace &Ice; protocol messages</entry>
</row>
</tbody>
</tgroup>
</informaltable>
</para>
</section>
</section>

<section><title>Ice.Trace.Retry</title>
<section><title>Synopsis</title>
<synopsis>
Ice.Trace.Retry=<replaceable>num</replaceable>
</synopsis>
</section>
<section>
<title>Description</title>
<para>
The request retry tracing level:
<informaltable>
<tgroup cols=2>
<tbody>
<row>
<entry>0</entry>
<entry>no request retry tracing</entry>
</row>
<row>
<entry>1</entry>
<entry>trace &Ice; operation call retries</entry>
</row>
<row>
<entry>2</entry>
<entry>trace also &Ice; endpoint usage</entry>
</row>
</tbody>
</tgroup>
</informaltable>
</para>
</section>
</section>

<section><title>Freeze.Trace.DB</title>
<section><title>Synopsis</title>
<synopsis>
Freeze.Trace.DB=<replaceable>num</replaceable>
</synopsis>
</section>
<section>
<title>Description</title>
<para>
The &Freeze; database activity tracing level:
<informaltable>
<tgroup cols=2>
<tbody>
<row>
<entry>0</entry>
<entry>no database activity tracing</entry>
</row>
<row>
<entry>1</entry>
<entry>trace database activity</entry>
</row>
<row>
<entry>2</entry>
<entry>trace also database transactions</entry>
</row>
</tbody>
</tgroup>
</informaltable>
</para>
</section>
</section>

<section><title>Freeze.Trace.Evictor</title>
<section><title>Synopsis</title>
<synopsis>
Freeze.Trace.Evictor=<replaceable>num</replaceable>
</synopsis>
</section>
<section>
<title>Description</title>
<para>
The &Freeze; Evictor activity tracing level:
<informaltable>
<tgroup cols=2>
<tbody>
<row>
<entry>0</entry>
<entry>no Evictor activity tracing</entry>
</row>
<row>
<entry>1</entry>
<entry>trace Ice Object creation and destruction, as well as
Evictor deactivation</entry>
</row>
<row>
<entry>2</entry>
<entry>trace also Evictor queue activity</entry>
</row>
</tbody>
</tgroup>
</informaltable>
</para>
</section>
</section>

</section>

<!-- ********************************************************************** -->
<section><title>Object Adapter</title>
<!-- ********************************************************************** -->

<section><title>Ice.Adapter.<replaceable>name</replaceable>.Endpoints</title>
<section><title>Synopsis</title>
<synopsis>
Ice.Adapter.<replaceable>name</replaceable>.Endpoints=<replaceable>endpoints</replaceable>
</synopsis>
</section>
<section>
<title>Description</title>
<para>
Sets the endpoints for the object adapter
<replaceable>name</replaceable> to
<replaceable>enpoints</replaceable>.
</para>
</section>
</section>

</section>

<!-- ********************************************************************** -->
<section><title>Thread Pool</title>
<!-- ********************************************************************** -->

<section><title>Ice.ThreadPool.Size</title>
<section><title>Synopsis</title>
<synopsis>
Ice.ThreadPool.Size=<replaceable>num</replaceable>
</synopsis>
</section>
<section>
<title>Description</title>
<para>
The number of threads in the thread pool. Default is 10.
<replaceable>num</replaceable> must be larger than zero.
</para>
</section>
</section>

</section>

<!-- ********************************************************************** -->
<section><title>Miscellaneous</title>
<!-- ********************************************************************** -->

<section><title>Ice.Daemon, Ice.DaemonNoClose, Ice.DaemonNoChdir</title>
<section><title>Synopsis</title>
<synopsis>
Ice.Daemon=<replaceable>num</replaceable>
Ice.DaemonNoClose=<replaceable>no_close</replaceable>
Ice.DaemonNoChdir=<replaceable>no_chdir</replaceable>
</synopsis>
</section>
<section>
<title>Description</title>
<para>
If <replaceable>num</replaceable> is set to a value larger than zero,
the &Ice; process daeamonizes itself with the
<literal>daemon</literal> system call. If
<replaceable>no_close</replaceable> is set to a value larger than zero,
standard input, output, and error output are not redirected to
<literal>/dev/null</literal>. If <replaceable>no_chdir</replaceable> is
set to a value larger than zero, &Ice; doesn't change its working
directory to the root directory. (Unix only.)
</para>
</section>
</section>

<section><title>Ice.PrintProcessId</title>
<section><title>Synopsis</title>
<synopsis>
Ice.PrintProcessId=<replaceable>num</replaceable>
</synopsis>
</section>
<section>
<title>Description</title>
<para>
If <replaceable>num</replaceable> is set to a value larger than zero,
the process ID is printed on standard output upon startup.
</para>
</section>
</section>

<section><title>Ice.PrintAdapterReady</title>
<section><title>Synopsis</title>
<synopsis>
Ice.PrintAdapterReady=<replaceable>num</replaceable>
</synopsis>
</section>
<section>
<title>Description</title>
<para>
If <replaceable>num</replaceable> is set to a value larger than zero,
an object adapter prints "<replaceable>adapter_name</replaceable>
ready" on standard output after initialization is complete. This is
useful for scripts that wish to wait until an object adapter is ready
to be used.
</para>
</section>
</section>

<section><title>Ice.ProgramName</title>
<section><title>Synopsis</title>
<synopsis>
Ice.ProgramName=<replaceable>name</replaceable>
</synopsis>
</section>
<section>
<title>Description</title>
<para>
<replaceable>name</replaceable> is the program name, which is set
automatically from <literal>argv[0]</literal> during
initialization. However, a different name can be used by overwriting
this property.
</para>
</section>
</section>

<section><title>Ice.ServerIdleTime</title>
<section><title>Synopsis</title>
<synopsis>
Ice.ServerIdleTime=<replaceable>num</replaceable>
</synopsis>
</section>
<section>
<title>Description</title>
<para>
If <replaceable>num</replaceable> is set to a value larger than zero,
&Ice; will automatically call
<literal>Communicator::shutdown</literal> after the Communicator has
been idle for <replaceable>num</replaceable> seconds. This will shut
down the Communicator's server side, and all threads waiting in
<literal>Communicator::waitForShutdown</literal> will return. After
that, a server will typically do some cleanup work, and then exit.
</para>
</section>
</section>

<section><title>Ice.UseSyslog</title>
<section><title>Synopsis</title>
<synopsis>
Ice.UseSyslog=<replaceable>num</replaceable>
</synopsis>
</section>
<section>
<title>Description</title>
<para>
If <replaceable>num</replaceable> is set to a value larger than zero,
a special logger is installed, which logs to the syslog facility
instead of to standard error output. The identfier for syslog is the
value of <literal>Ice.ProgramName</literal>. (Unix only.)
</para>
</section>
</section>

</section>

