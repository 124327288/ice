<!--
**********************************************************************
Copyright (c) 2001
MutableRealms, Inc.
Huntsville, AL, USA

All Rights Reserved
**********************************************************************
-->

<para>
If not stated otherwise in the description of the individual
properties, the default value for all properties is the empty
string. If the property takes a numeric parameter as value, the empty
string is interpreted as zero.
</para>

<!-- ********************************************************************** -->
<section><title>Tracing</title>
<!-- ********************************************************************** -->

<section><title>Ice.Trace.Network</title>
<section><title>Synopsis</title>
<synopsis>
Ice.Trace.Network=<replaceable>num</replaceable>
</synopsis>
</section>
<section>
<title>Description</title>
<para>
The network tracing level:
<informaltable>
<tgroup cols=2>
<tbody>
<row>
<entry>0</entry>
<entry>no network tracing</entry>
</row>
<row>
<entry>1</entry>
<entry>trace connection establishment and closure</entry>
</row>
<row>
<entry>2</entry>
<entry>like 1, but more detailed</entry>
</row>
<row>
<entry>3</entry>
<entry>like 2, but also trace data transfers</entry>
</row>
</tbody>
</tgroup>
</informaltable>
</para>
</section>
</section>

<section><title>Ice.Trace.Protocol</title>
<section><title>Synopsis</title>
<synopsis>
Ice.Trace.Protocol=<replaceable>num</replaceable>
</synopsis>
</section>
<section>
<title>Description</title>
<para>
The protocol tracing level:
<informaltable>
<tgroup cols=2>
<tbody>
<row>
<entry>0</entry>
<entry>no protocol tracing</entry>
</row>
<row>
<entry>1</entry>
<entry>trace &Ice; protocol messages</entry>
</row>
</tbody>
</tgroup>
</informaltable>
</para>
</section>
</section>

<section><title>Ice.Trace.Retry</title>
<section><title>Synopsis</title>
<synopsis>
Ice.Trace.Retry=<replaceable>num</replaceable>
</synopsis>
</section>
<section>
<title>Description</title>
<para>
The request retry tracing level:
<informaltable>
<tgroup cols=2>
<tbody>
<row>
<entry>0</entry>
<entry>no request retry tracing</entry>
</row>
<row>
<entry>1</entry>
<entry>trace &Ice; operation call retries</entry>
</row>
<row>
<entry>2</entry>
<entry>trace also &Ice; endpoint usage</entry>
</row>
</tbody>
</tgroup>
</informaltable>
</para>
</section>
</section>

<section><title>Ice.Trace.Security</title>
<section><title>Synopsis</title>
<synopsis>
Ice.Trace.Security=<replaceable>num</replaceable>
</synopsis>
</section>
<section>
<title>Description</title>
<para>
The Security extension tracing level:
<informaltable>
<tgroup cols=2>
<tbody>
<row>
<entry>0</entry>
<entry>no security tracing</entry>
</row>
<row>
<entry>1</entry>
<entry>verbose, security warnings</entry>
</row>
<row>
<entry>2</entry>
<entry>more verbose, includes warnings during configuration file parse step</entry>
</row>
</tbody>
</tgroup>
</informaltable>
</para>
</section>
</section>


<section><title>Freeze.Trace.DB</title>
<section><title>Synopsis</title>
<synopsis>
Freeze.Trace.DB=<replaceable>num</replaceable>
</synopsis>
</section>
<section>
<title>Description</title>
<para>
The &Freeze; database activity tracing level:
<informaltable>
<tgroup cols=2>
<tbody>
<row>
<entry>0</entry>
<entry>no database activity tracing</entry>
</row>
<row>
<entry>1</entry>
<entry>trace database activity</entry>
</row>
<row>
<entry>2</entry>
<entry>trace also database transactions</entry>
</row>
</tbody>
</tgroup>
</informaltable>
</para>
</section>
</section>

<section><title>Freeze.Trace.Evictor</title>
<section><title>Synopsis</title>
<synopsis>
Freeze.Trace.Evictor=<replaceable>num</replaceable>
</synopsis>
</section>
<section>
<title>Description</title>
<para>
The &Freeze; Evictor activity tracing level:
<informaltable>
<tgroup cols=2>
<tbody>
<row>
<entry>0</entry>
<entry>no Evictor activity tracing</entry>
</row>
<row>
<entry>1</entry>
<entry>trace Ice Object creation and destruction, as well as
Evictor deactivation</entry>
</row>
<row>
<entry>2</entry>
<entry>trace also Evictor queue activity</entry>
</row>
</tbody>
</tgroup>
</informaltable>
</para>
</section>
</section>

</section>

<!-- ********************************************************************** -->
<section><title>Object Adapter</title>
<!-- ********************************************************************** -->

<section><title>Ice.Adapter.<replaceable>name</replaceable>.Endpoints</title>
<section><title>Synopsis</title>
<synopsis>
Ice.Adapter.<replaceable>name</replaceable>.Endpoints=<replaceable>endpoints</replaceable>
</synopsis>
</section>
<section>
<title>Description</title>
<para>
Sets the endpoints for the object adapter
<replaceable>name</replaceable> to
<replaceable>enpoints</replaceable>, provided that such object adapter
has been created with
<literal>Ice::Communicator::createObjectAdapter</literal>.
</para>
</section>
</section>

</section>

<!-- ********************************************************************** -->
<section><title>Thread Pool</title>
<!-- ********************************************************************** -->

<section><title>Ice.ThreadPool.MaxConnections</title>
<section><title>Synopsis</title>
<synopsis>
Ice.ThreadPool.MaxConnections=<replaceable>num</replaceable>
</synopsis>
</section>
<section>
<title>Description</title>
<para>
The maximum number of connections the thread pool will use. Default is
zero, meaning no limit. If <replaceable>num</replaceable> is not set
to zero, it must be set to a value larger than the number of threads
in the thread pool.
</para>
</section>
</section>

<section><title>Ice.ThreadPool.Size</title>
<section><title>Synopsis</title>
<synopsis>
Ice.ThreadPool.Size=<replaceable>num</replaceable>
</synopsis>
</section>
<section>
<title>Description</title>
<para>
The number of threads in the thread pool. Default is 10.
<replaceable>num</replaceable> must be larger than zero.
</para>
</section>
</section>

</section>

<!-- ********************************************************************** -->
<section><title>Security</title>
<!-- ********************************************************************** -->

<section><title>Ice.Security.Ssl.CertPath</title>
<section><title>Synopsis</title>
<synopsis>
Ice.Security.Ssl.CertPath=<replaceable>path</replaceable>
</synopsis>
</section>
<section>
<title>Description</title>
<para>
Defines the path (relative or absolute) where the SSL Security Extension can
find PEM format certificate files (RSA and DSA) and Diffie-Hellman group
parameter files.
In the case that the <literal>Ice.Security.Ssl.Config</literal> is a relative
path, it will be relative to the value of
<literal>Ice.Security.Ssl.CertPath</literal>
</para>
</section>
</section>

<section><title>Ice.Security.Ssl.Config</title>
<section><title>Synopsis</title>
<synopsis>
Ice.Security.Ssl.Config=<replaceable>config_file</replaceable>
</synopsis>
</section>
<section>
<title>Description</title>
<para>
Defines the XML-based configuration file that the SSL Security Extension will
use to load initialization information and certificates from. If this property
contains a relative path, the path will be interpreted in terms of
<literal>Ice.Security.Ssl.CertPath</literal>. Xerces-c, the XML parser used to
read this file, will look for the DTD file in the same directory that it finds
the XML configuration file.
</para>
</section>
</section>

<section><title>Ice.Security.Ssl.Handshake.ReadTimeout</title>
<section><title>Synopsis</title>
<synopsis>
Ice.Security.Ssl.Handshake.ReadTimeout=<replaceable>ms</replaceable>
</synopsis>
</section>
<section>
<title>Description</title>
<para>
In order to tweak the behavior of SSL with regards to hanshake, this timeout
value, expressed in milliseconds, will be used for the first read directly
after the SSL handshake is completed.  This gives the other party time to send
application data before the connection times-out and resets.
</para>
</section>
</section>

</section>

<!-- ********************************************************************** -->
<section><title>Protocol</title>
<!-- ********************************************************************** -->

<section><title>Ice.DefaultProtocol</title>
<section><title>Synopsis</title>
<synopsis>
Ice.DefaultProtocol=<replaceable>protocol</replaceable>
</synopsis>
</section>
<section>
<title>Description</title>
<para>
Sets the protocol that is being used if an endpoint uses
<literal>default</literal> as protocol specification. The default
value is <literal>tcp</literal>.
</para>
</section>
</section>

<section><title>Ice.DefaultHost</title>
<section><title>Synopsis</title>
<synopsis>
Ice.DefaultHost=<replaceable>host</replaceable>
</synopsis>
</section>
<section>
<title>Description</title>
<para>
If an endpoint is specified without a host name (i.e., without a
<literal>-h <replaceable>host</replaceable></literal> option), the
<replaceable>host</replaceable> value from this property is being used
instead. The default value is the local host name.
</para>
</section>
</section>

</section>

<!-- ********************************************************************** -->
<section><title>Miscellaneous</title>
<!-- ********************************************************************** -->

<section><title>Ice.Daemon, Ice.DaemonNoClose, Ice.DaemonNoChdir</title>
<section><title>Synopsis</title>
<synopsis>
Ice.Daemon=<replaceable>num</replaceable>
Ice.DaemonNoClose=<replaceable>no_close</replaceable>
Ice.DaemonNoChdir=<replaceable>no_chdir</replaceable>
</synopsis>
</section>
<section>
<title>Description</title>
<para>
If <replaceable>num</replaceable> is set to a value larger than zero,
the &Ice; process daeamonizes itself with the
<literal>daemon</literal> system call. If
<replaceable>no_close</replaceable> is set to a value larger than zero,
standard input, output, and error output are not redirected to
<literal>/dev/null</literal>. If <replaceable>no_chdir</replaceable> is
set to a value larger than zero, &Ice; doesn't change its working
directory to the root directory. (Unix only.)
</para>
</section>
</section>

<section><title>Ice.PrintProcessId</title>
<section><title>Synopsis</title>
<synopsis>
Ice.PrintProcessId=<replaceable>num</replaceable>
</synopsis>
</section>
<section>
<title>Description</title>
<para>
If <replaceable>num</replaceable> is set to a value larger than zero,
the process ID is printed on standard output upon startup.
</para>
</section>
</section>

<section><title>Ice.PrintAdapterReady</title>
<section><title>Synopsis</title>
<synopsis>
Ice.PrintAdapterReady=<replaceable>num</replaceable>
</synopsis>
</section>
<section>
<title>Description</title>
<para>
If <replaceable>num</replaceable> is set to a value larger than zero,
an object adapter prints "<replaceable>adapter_name</replaceable>
ready" on standard output after initialization is complete. This is
useful for scripts that wish to wait until an object adapter is ready
to be used.
</para>
</section>
</section>

<section><title>Ice.ProgramName</title>
<section><title>Synopsis</title>
<synopsis>
Ice.ProgramName=<replaceable>name</replaceable>
</synopsis>
</section>
<section>
<title>Description</title>
<para>
<replaceable>name</replaceable> is the program name, which is set
automatically from <literal>argv[0]</literal> during
initialization. However, a different name can be used by overwriting
this property.
</para>
</section>
</section>

<section><title>Ice.ServerIdleTime</title>
<section><title>Synopsis</title>
<synopsis>
Ice.ServerIdleTime=<replaceable>num</replaceable>
</synopsis>
</section>
<section>
<title>Description</title>
<para>
If <replaceable>num</replaceable> is set to a value larger than zero,
&Ice; will automatically call
<literal>Communicator::shutdown</literal> after the Communicator has
been idle for <replaceable>num</replaceable> seconds. This will shut
down the Communicator's server side, and all threads waiting in
<literal>Communicator::waitForShutdown</literal> will return. After
that, a server will typically do some cleanup work, and then exit.
</para>
</section>
</section>

<section><title>Ice.UseSyslog</title>
<section><title>Synopsis</title>
<synopsis>
Ice.UseSyslog=<replaceable>num</replaceable>
</synopsis>
</section>
<section>
<title>Description</title>
<para>
If <replaceable>num</replaceable> is set to a value larger than zero,
a special logger is installed, which logs to the syslog facility
instead of to standard error output. The identfier for syslog is the
value of <literal>Ice.ProgramName</literal>. (Unix only.)
</para>
</section>
</section>

<section><title>Ice.WarnAboutServerExceptions</title>
<section><title>Synopsis</title>
<synopsis>
Ice.WarnAboutServerExceptions=<replaceable>num</replaceable>
</synopsis>
</section>
<section>
<title>Description</title>
<para>
If <replaceable>num</replaceable> is set to a value larger than zero,
servers print warning messages if they encounter an unexpected
exception while accepting connection requests from clients, or while
dispatching operation calls invoked by clients.
</para>
</section>
</section>

</section>

<!-- ********************************************************************** -->
<section><title>&IceStorm; Properties</title>
<!-- ********************************************************************** -->

<section><title>IceStorm.Trace.TopicManager</title>
<section><title>Synopsis</title>
<synopsis>
IceStorm.Trace.TopicManager=<replaceable>num</replaceable>
</synopsis>
</section>
<section>
<title>Description</title>
<para>
The topic manager tracing level:
<informaltable>
<tgroup cols=2>
<tbody>
<row>
<entry>0</entry>
<entry>no tracing</entry>
</row>
<row>
<entry>1</entry>
<entry>topic creation, subscription, unsubscription</entry>
</row>
<row>
<entry>2</entry>
<entry>more verbose, includes qos information, and other diagnostic information</entry>
</row>
</tbody>
</tgroup>
</informaltable>
</para>
</section>
</section>

<section><title>IceStorm.Trace.Topic</title>
<section><title>Synopsis</title>
<synopsis>
IceStorm.Trace.Topic=<replaceable>num</replaceable>
</synopsis>
</section>
<section>
<title>Description</title>
<para>
The Topic tracing level:
<informaltable>
<tgroup cols=2>
<tbody>
<row>
<entry>0</entry>
<entry>no tracing</entry>
</row>
<row>
<entry>1</entry>
<entry>trace topic diagnostic information</entry>
</row>
</tbody>
</tgroup>
</informaltable>
</para>
</section>
</section>

<section><title>IceStorm.Trace.Flush</title>
<section><title>Synopsis</title>
<synopsis>
IceStorm.Trace.Flush=<replaceable>num</replaceable>
</synopsis>
</section>
<section>
<title>Description</title>
<para>
Trace information on the thread that flushes batch reliability events to subscribers:
<informaltable>
<tgroup cols=2>
<tbody>
<row>
<entry>0</entry>
<entry>no tracing</entry>
</row>
<row>
<entry>1</entry>
<entry>trace each flush</entry>
</row>
</tbody>
</tgroup>
</informaltable>
</para>
</section>
</section>

<section><title>IceStorm.Trace.Subscriber</title>
<section><title>Synopsis</title>
<synopsis>
IceStorm.Trace.Subscriber=<replaceable>num</replaceable>
</synopsis>
</section>
<section>
<title>Description</title>
<para>
The Subscriber tracing level:
<informaltable>
<tgroup cols=2>
<tbody>
<row>
<entry>0</entry>
<entry>no tracing</entry>
</row>
<row>
<entry>1</entry>
<entry>trace topic diagnostic information on subscription/unsubscription</entry>
</row>
</tbody>
</tgroup>
</informaltable>
</para>
</section>
</section>

<section><title>IceStorm.Flush.Timeout</title>
<section><title>Synopsis</title>
<synopsis>
IceStorm.Flush.Timeout=<replaceable>num</replaceable>
</synopsis>
</section>
<section>
<title>Description</title>
<para>
Defines the interval in milliseconds that batch reliability events are
sent to subscribers. The default is 1000 ms. The minimum value of this
property is 100 ms.
</para>
</section>
</section>

<section><title>IceStorm.TopicManager.Endpoints</title>
<section><title>Synopsis</title>
<synopsis>
IceStorm.TopicManager.Endpoints=<replaceable>endpoints</replaceable>
</synopsis>
</section>
<section>
<title>Description</title>
<para>
Defines the endpoints that the &IceStorm; topic manager uses.
</para>
</section>
</section>

</section>

<!-- ********************************************************************** -->
<section><title>&IcePack; Properties</title>
<!-- ********************************************************************** -->

<section><title>IcePack.Admin.Endpoints, IcePack.Forward.Endpoints</title>
<section><title>Synopsis</title>
<synopsis>
IcePack.Admin.Endpoints=<replaceable>endpoints</replaceable>
IcePack.Forward.Endpoints=<replaceable>endpoints</replaceable>
</synopsis>
</section>
<section>
<title>Description</title>
<para>
Defines the endpoints that the &IcePack; administrative interface, and
of the &IcePack; forwarder.
</para>
</section>
</section>

</section>
