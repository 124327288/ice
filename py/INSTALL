=========================================================================
Requirements
=========================================================================

- Python 2.3
- Ice 2.0.0

If you don't have Python 2.3 on your system, you can download the
source distribution from http://www.python.org.

If you have downloaded a source distribution, see the build
instructions below.

If you have downloaded a binary distribution of Ice for Python,
you have everything you need to use Ice from Python; it is not
necessary to download and build Ice for C++. See the section
"Configuring your Environment" below.


=========================================================================
Building the Ice extension for Python (Linux/Solaris/HP-UX/MacOS X/AIX)
=========================================================================

Follow these steps to build the Ice extension for Python:

1) Edit config/Make.rules and do the following:

   * Modify the installation prefix (if necessary).

   * Review the settings for PYTHON_HOME, PYTHON_INCLUDE_DIR and
     PYTHON_LIB_DIR.

     Note: HP-UX users should modify PYTHON_LIB_DIR to enable the
           linker to find the Python shared library. See Python
           Platform Notes below for more information.

2) Execute 'python -V' to verify that the Python 2.3 interpreter
   is in your executable search path.

3) Run 'make'.

4) Upon successful completion, run 'make install'. You may need
   additional user priveleges to install in the directory specified
   by config/Make.rules.

5) See "Configuring your Environment" below.


=========================================================================
Building the Ice extension for Python (Windows)
=========================================================================

The Python interpreter is readily available on Windows platforms. You
can build it yourself using Microsoft Visual C++, or obtain a binary
distribution such as ActivePython (http://www.activestate.com).

Follow these steps to build the Ice extension for Python:

1) Configure Visual C++ so that it can find the Python include files
   and libraries.

2) Open the "all.dsw" workspace. If you are using Visual C++ .NET,
   the project files will first need to be converted from the Visual
   C++ 6.0 format.

3) Set your active project to "IcePy". Note that the default
   configuration is a Debug build, which requires that the debug
   libraries be available for Python and Ice.

4) Build the "IcePy" project.

5) See "Configuring your Environment" below.

NOTE: When compiling the Python interpreter from sources using
      Microsoft Visual C++ 6.0, the presence of the STLport header
      files causes a compilation error. The solution is to temporarily
      remove or rename the STLport include directory in your Visual C++
      settings using Tools/Options/Directories/Include files.


=========================================================================
Configuring your Environment
=========================================================================

Unix:

   Modify your PYTHONPATH environment variable to include the Ice
   for Python extension. Assuming you installed the extension in
   the default directory (/opt/IcePy-2.0.0), you would modify your
   environment as shown below:

   export ICEPY_HOME=/opt/IcePy-2.0.0
   export PYTHONPATH=$ICEPY_HOME/lib:$ICEPY_HOME/python:$PYTHONPATH

Windows:

   Modify your environment to allow Python to find the Ice for
   Python extension. The interpreter must be able to locate
   the extension DLL as well as the Python source files in the
   "python" subdirectory. This is normally accomplished by setting
   the PYTHONPATH environment variable to contain the necessary
   subdirectories. For example, if the Ice for Python extension is
   installed in C:\IcePy-2.0.0, you could configure your environment
   as follows:

   set ICEPY_HOME=C:\IcePy-2.0.0
   set PYTHONPATH=%ICEPY_HOME%\bin;%ICEPY_HOME%\python


=========================================================================
Running the Tests
=========================================================================

The test subdirectory contains Python implementations of the core Ice
test suite.

To run all of the tests, do the following:

$ python allTests.py

You can also run tests individually by changing to the test directory
and running this command:

$ python run.py


=========================================================================
Python Platform Notes (HP-UX)
=========================================================================

The Python sources need to be compiled with the following options
in order to successfully load the Ice extension:

./configure --enable-shared --with-cxx="aCC -AA +DAportable" ...
