// **********************************************************************
//
// Copyright (c) 2003
// ZeroC, Inc.
// Billerica, MA, USA
//
// All Rights Reserved.
//
// Ice is free software; you can redistribute it and/or modify it under
// the terms of the GNU General Public License version 2 as published by
// the Free Software Foundation.
//
// **********************************************************************


//
// This class should be generated by slice2freeze
//

public class NameIndex extends Freeze.Index 
{
    public NameIndex(String indexName)
    {
	super(indexName);
    }

    public Ice.Identity[]
    findFirst(String name, int firstN)
    {
	return untypedFindFirst(marshalKey(name), firstN);
    }

    public Ice.Identity[]
    find(String name)
    {
	return untypedFind(marshalKey(name));
    }

    public int
    count(String name)
    {
	return untypedCount(marshalKey(name));
    }
   
    protected byte[]
    marshalKey(Ice.Object servant)
    {
	if(servant instanceof Contact)
	{
	    String key = ((Contact) servant).name;
	    return marshalKey(key);
	}
	else
	{
	    return null;
	}
    }

    private byte[]
    marshalKey(String key)
    {
	IceInternal.BasicStream __os = new IceInternal.BasicStream(Ice.Util.getInstance(communicator()));
	try
	{
	    __os.writeString(key);
	    java.nio.ByteBuffer __buf = __os.prepareWrite();
	    byte[] __r = new byte[__buf.limit()];
	    __buf.get(__r);
	    return __r;
	}
	finally
	{
	    __os.destroy();
	}   
    }

}
