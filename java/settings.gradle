// **********************************************************************
//
// Copyright (c) 2003-2014 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************

// Main source
include ':ice'
project(':ice').projectDir = new File('src/Ice')
include ':icediscovery'
project(':icediscovery').projectDir = new File('src/IceDiscovery')
include	':freeze'
project(':freeze').projectDir = new File('src/Freeze')
include	':icebox'
project(':icebox').projectDir = new File('src/IceBox')
include	':glacier2'
project(':glacier2').projectDir = new File('src/Glacier2')
include	':icepatch2'
project(':icepatch2').projectDir = new File('src/IcePatch2')
include	':icestorm'
project(':icestorm').projectDir = new File('src/IceStorm')
include	':icegrid'
project(':icegrid').projectDir = new File('src/IceGrid')
include	':IceGridGUI'
project(':IceGridGUI').projectDir = new File('src/IceGridGUI')


include ':ant'
project(':ant').projectDir = new File('src/ant')

// Tests
include ':test'
include ':testPlugins'
project(':testPlugins').projectDir = new File('test/plugins')

// Map of dir->subdir for each of the demos.
def demos = [
	'Ice' : ['applet', 'async', 'bidir', 'callback', 'hello', 'invoke',
		 	 'interrupt', 'latency', 'minimal', 'multicast', 'nested',
		 	 'plugin', 'properties', 'serialize','session', 'swing',
		 	 'throughput', 'value', 'optional','context'],
 	'IceDiscovery' : ['hello', 'replication'],
	'Database' : ['library'],
	'Freeze' : ['bench', 'casino', 'library', 'phonebook', 'transform'],
	'IceBox' : ['hello'],
	'Glacier2' : ['callback', 'chat', 'voip'],
	'IceStorm' : ['clock'],
	'IceGrid' : ['icebox', 'simple'],
	'Manual' : ['evictor_filesystem', 'lifecycle', 'map_filesystem', 'printer', 'simple_filesystem']
]

demos.each {
	def dir = it.key
	def subdirs = it.value

	subdirs.each {
		// abc_def -> AbcDef
		def name = it.split('_').collect { it.capitalize() }.join()

		// A project in directory xyz is demoXyzAbcDef
	 	def projectName = ":demo${dir.capitalize()}${name}"
	 	include projectName

	 	// The directory is demo/<dir>/<name>.
	 	project("${projectName}").projectDir = new File("demo/${dir}/${it}")
	}
}
