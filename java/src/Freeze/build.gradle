slice {
    java {
        include = ["${sliceDir}"]
        args = "--ice"
        files = files(fileTree(dir: "$sliceDir/Freeze", includes:['*.ice'], excludes:["*F.ice"]),
                      file("./src/main/java/Freeze/PingObject.ice"))
    }
    freezej {
        files = [file("${sliceDir}/Ice/BuiltinSequences.ice"),
                 file("${sliceDir}/Freeze/CatalogData.ice")]
        args = "--ice"
        dict {
            CatalogData {
                javaType = "Freeze.Catalog"
                key = "string"
                value = "Freeze::CatalogData"
            }
        }
        dict {
            CatalogIndexList {
                javaType = "Freeze.CatalogIndexList"
                key = "string"
                value = "Ice::StringSeq"
            }
        }
    }
}

dependencies {
    compile project(':src/Ice')
    compile "com.sleepycat:db:${dbVersion}"
}

idea.module {
    excludeDirs -= file(buildDir)
    buildDir.listFiles({d, f ->f != 'generated-src'} as FilenameFilter).each { excludeDirs += it }
}

def jarName = "Freeze${versionSuffix}.jar"

jar {
    archiveName = jarName
    destinationDir = new File("${libDir}")
}

clean {
    delete("${libDir}/${jarName}")
}

task copyJars(type: Copy, dependsOn: jar) {
    from new File("${libDir}/${jarName}")
    into "${DESTDIR}${prefix}/lib"
}
task install(dependsOn: copyJars)
