apply plugin: 'application'
apply from: "../../gradle/javafx7.gradle"

dependencies {
  compile project(':src/Ice')
  compile project(':src/IceBox')
  compile project(':src/IceGrid')
  compile 'com.jgoodies:jgoodies-common:1.8.0'
  compile 'com.jgoodies:jgoodies-looks:2.6.0'
  compile 'com.jgoodies:jgoodies-forms:1.8.0'
}

mainClassName = "IceGridGUI.Main"

def tmpJarName = "IceGridGUITEMP${versionSuffix}.jar"
def jarName = "IceGridGUI${versionSuffix}.jar"

jar {
	archiveName = tmpJarName
    destinationDir = new File("${libDir}")
}

buildscript {
    repositories {
        maven {
            url 'http://www.zeroc.com:8081/nexus/content/repositories/thirdparty'
        }
    }
    dependencies {
        classpath group: 'net.sourceforge', name: 'proguard', version: '5.0'
    }

}

def javaHome = System.getProperty('java.home')
def libJars = []
['rt.jar', 'jsse.jar', 'jfxrt.jar', 'ext/jfxrt.jar'].each {
	libJars << "${javaHome}/lib/${it}"
}

task proguardJar(type: proguard.gradle.ProGuardTask, dependsOn: jar) {
	injars configurations.compile.resolve(), filter: '!META-INF/**'
	injars "${libDir}/${tmpJarName}"
	outjars "${libDir}/${jarName}"
	libraryjars libJars
	configuration "$rootProject.projectDir/config/icegridgui.pro"
}

task proguardCleanup(dependsOn: proguardJar) << {
	delete("${libDir}/${tmpJarName}")
}
build.dependsOn(proguardCleanup)

clean {
    delete("${libDir}/${jarName}")
}

task copyJars(type: Copy, dependsOn: jar) {
    from new File("${libDir}/${jarName}")
    into "${DESTDIR}${prefix}/lib"
}
task install(dependsOn: copyJars)
